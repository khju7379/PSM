--DROP PROCEDURE TYJINFWLIB.ORG_USER_LIST_SV;
-------------------------------------------------------------------------------------------
-- 프로시저명 : ORG_USER_LIST_SV
-- 작성자     : 문광복
-- 작성일     :	2015-09-02
-- 설명       : 전체 사용자를 조회한다.
-- 예문       : CALL ORG_USER_LIST_SV (1,20,'','ko')
-- 수정       : 2015-11-10 박제영 LOGINID 추가
--		프렌지 변환 : PTORGUSR70L2 -> ORG_USER_LIST_SV
-------------------------------------------------------------------------------------------
CREATE PROCEDURE TYJINFWLIB.ORG_USER_LIST_SV 
(
		P_CURRENTPAGEINDEX       INTEGER             -- 목록의 현재페이지 번호  
	,   P_PAGESIZE               INTEGER             -- 목록의 한 페이지에 표현되는 글 목록수  
	,   P_SEARCHCONDITION        VARCHAR(4000) 	 	 -- 조회조건 내용  
	,   P_LANGCODE        CHAR(2) 	 		 -- 언어코드  
)
	RESULT SETS 2
	LANGUAGE SQL
P1: BEGIN -- 시작
	
	DECLARE P_STNUM                  INTEGER;   
	DECLARE P_FNNUM                  INTEGER;
	DECLARE P_SQLSTRING              VARCHAR(4000);   
	DECLARE P_SQLTOTALROWCOUNT       VARCHAR(4000);  
	DECLARE P_TABLE_QUERY 			 VARCHAR(4000);
	DECLARE P_COUNT_QUERY 			 VARCHAR(4000);
	   
	S1: BEGIN -- 값 설정
		SET P_STNUM = (P_PAGESIZE * (P_CURRENTPAGEINDEX - 1)) + 1;   
		SET P_FNNUM = P_PAGESIZE * P_CURRENTPAGEINDEX;   
	END S1; 
	
	S2: BEGIN -- 실행부
		C1 : BEGIN -- 리스트
			DECLARE REFCURSOR  INSENSITIVE SCROLL CURSOR WITH RETURN FOR CUR1 ;  -- 커서생성 
			SET P_TABLE_QUERY = '
				WITH ORIGINAL_DATA AS (
					SELECT 
							ROW_NUMBER() OVER(ORDER BY COMPANYCODE ASC, USERNAME ASC) AS ROWNO
						,	COMPANYCODE
						,	EMPID
						,	LOGINID
						,	USERNAME
						,	MAINDEPTCODE
						,	DEPTNAME
						,	RANKCODE
						,	RANKNAME
						,	DPARTNER
					FROM (
						SELECT 
								A.COMPANYCODE
							,	B.COMPANY
							,	A.EMPID
							,	A.LOGINID
							,	C.USERLNAME || C.USERFNAME AS USERNAME
							,	A.MAINDEPTCODE
							,	D.DEPTNAME
							,	A.RANKCODE
							,	E.RANKNAME
							,	F.DPARTNER
						FROM ORG_USER A
							JOIN ORG_COMPANYLANG B 
								ON (A.COMPANYCODE=B.COMPANYCODE AND B.LANGUAGECODE=''' || P_LANGCODE || ''')
							JOIN ORG_USERLANG C 
								ON (A.COMPANYCODE=C.COMPANYCODE AND A.EMPID=C.EMPID AND C.LANGCODE=''' || P_LANGCODE || ''')
							JOIN ORG_DEPTLANG 
								D ON (A.COMPANYCODE=D.COMPANYCODE AND A.MAINDEPTCODE=D.DEPTCODE AND D.LANGCODE=''' || P_LANGCODE || ''')
							LEFT OUTER JOIN ORG_RANK 
								E ON (A.COMPANYCODE=E.COMPANYCODE AND A.RANKCODE=E.RANKCODE AND E.LANGCODE=''' || P_LANGCODE || ''')
							JOIN (SELECT COMPANYCODE, DEPTCODE, DPARTNER FROM ORG_DEPT)
								F ON (A.COMPANYCODE=F.COMPANYCODE AND A.MAINDEPTCODE=F.DEPTCODE)
					) AS A
					WHERE 1=1
						' || P_SEARCHCONDITION || '
				) 
			  
				SELECT 
					* 
				FROM ORIGINAL_DATA
				WHERE ROWNO BETWEEN ' || CAST(P_STNUM AS VARCHAR(100)) || ' AND ' || CAST(P_FNNUM AS VARCHAR(100)) || '
				ORDER BY ROWNO ASC
			';
			--SET P_TABLE_QUERY = '
			--	WITH ORIGINAL_DATA AS (  
			--		SELECT 
			--			ROW_NUMBER() OVER() AS ROWNO
			--		,	COMPANYCODE
			--		,	COMPANYNAME AS COMPANY
			--		,	EMPID
			--		,	LOGINID
			--		,	USERNAME
			--		,	DEPTCODE AS MAINDEPTCODE
			--		,	DEPTNAME
			--		,	RANKCODE
			--		,	RANKNAME
			--		FROM TEMPLETE20 C
			--		WHERE 1=1
			--			' || P_SEARCHCONDITION || '
			--	) 
			--  
			--	SELECT 
			--		* 
			--	FROM ORIGINAL_DATA
			--	WHERE ROWNO BETWEEN ' || CAST(P_STNUM AS VARCHAR(100)) || ' AND ' || CAST(P_FNNUM AS VARCHAR(100)) || '
			--	ORDER BY ROWNO ASC
			--';
			PREPARE CUR1 FROM P_TABLE_QUERY;
			OPEN REFCURSOR;
		END C1;
		C2: BEGIN -- 페이징
			DECLARE REFCURSOR2  INSENSITIVE SCROLL CURSOR WITH RETURN FOR CUR2 ;  -- 커서생성 
			SET P_COUNT_QUERY = '
				SELECT 
						COUNT(*) AS TOTALCOUNT  
					FROM (
						SELECT 
								A.COMPANYCODE
							,	B.COMPANY
							,	A.EMPID
							,	A.LOGINID
							,	C.USERLNAME || C.USERFNAME AS USERNAME
							,	A.MAINDEPTCODE
							,	D.DEPTNAME
							,	A.RANKCODE
							,	E.RANKNAME
							,	F.DPARTNER
						FROM ORG_USER A
							JOIN ORG_COMPANYLANG B 
								ON (A.COMPANYCODE=B.COMPANYCODE AND B.LANGUAGECODE=''' || P_LANGCODE || ''')
							JOIN ORG_USERLANG C 
								ON (A.COMPANYCODE=C.COMPANYCODE AND A.EMPID=C.EMPID AND C.LANGCODE=''' || P_LANGCODE || ''')
							JOIN ORG_DEPTLANG 
								D ON (A.COMPANYCODE=D.COMPANYCODE AND A.MAINDEPTCODE=D.DEPTCODE AND D.LANGCODE=''' || P_LANGCODE || ''')
							LEFT OUTER JOIN ORG_RANK 
								E ON (A.COMPANYCODE=E.COMPANYCODE AND A.RANKCODE=E.RANKCODE AND E.LANGCODE=''' || P_LANGCODE || ''')
							JOIN (SELECT COMPANYCODE, DEPTCODE, DPARTNER FROM ORG_DEPT)
								F ON (A.COMPANYCODE=F.COMPANYCODE AND A.MAINDEPTCODE=F.DEPTCODE)
					) AS A
					WHERE 1=1
						' || P_SEARCHCONDITION || '
				
			';
			--SET P_COUNT_QUERY = '
			--	SELECT 
			--			COUNT(*) AS TOTALCOUNT  
			--		FROM TEMPLETE20 C
			--		WHERE 1=1
			--			' || P_SEARCHCONDITION || '
			--
			--';
			PREPARE CUR2 FROM P_COUNT_QUERY;
			OPEN REFCURSOR2;
		END C2;
	END S2;
END P1