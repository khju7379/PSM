
-------------------------------------------------------------------------------------------
--
-- 프로시저명 : ORM_USERPREDEPT_LIST
-- 작성자     : 장경환
-- 작성일     : 2010-07-13
-- 설명       : 사용자의 상위부서 PATH를 조회한다.
-- 예문       : CALL TYJINFWLIB.ORM_USERPREDEPT_LIST('1', 'FLIPPY', 'KO')
-- DB2 변환   : 이전프로시져명 UP_ORGCHART_SELECT_USERPARENTDEPT
--
-------------------------------------------------------------------------------------------
--DROP PROCEDURE TYJINFWLIB.ORM_USERPREDEPT_LIST
CREATE PROCEDURE TYJINFWLIB.ORM_USERPREDEPT_LIST
(
		P_COMPANYCODE	VARCHAR(50)
	,	P_LOGINID		VARCHAR(20)
	,	P_LANGCODE		VARCHAR(10)
)
	LANGUAGE SQL
	RESULT SETS 1
	
P1 : BEGIN
	-- 파라미터로 넘어온 LANGUAGE CODE의 데이터가 없을때 영어로 셋팅
	IF NOT EXISTS(SELECT DEPTCODE FROM TYJINFWLIB.ORG_DEPTLANG WHERE LANGCODE = P_LANGCODE AND COMPANYCODE = P_COMPANYCODE) THEN
		SET P_LANGCODE = 'en';
	END IF;
	
	--DECLARE @DEPTCODE VARCHAR(50)
	--SET @DEPTCODE = (SELECT MAINDEPTCODE 
	--FROM TB_USER
	--WHERE LOGINID = P_LOGINID AND COMPANYCODE = P_COMPANYCODE AND DISPLAYYN = 'Y');
	IF EXISTS (SELECT MAINDEPTCODE FROM TYJINFWLIB.ORG_USER WHERE COMPANYCODE = P_COMPANYCODE AND LOGINID = P_LOGINID) THEN
		MAIN1 : BEGIN
			DECLARE REFCURSOR CURSOR WITH RETURN FOR
			WITH MST (COMPANYCODE, DEPTCODE) AS (
				SELECT
							COMPANYCODE		AS COMPANYCODE
						,	MAINDEPTCODE	AS DEPTCODE
				FROM
						TYJINFWLIB.ORG_USER
				WHERE
						COMPANYCODE	= P_COMPANYCODE
				AND		LOGINID		= P_LOGINID
				FETCH FIRST 1 ROWS ONLY
			)
			, PARENTDEPT (DEPTCODE, PARENTDEPTCODE, COMPANYCODE) AS (
				SELECT D.DEPTCODE, D.PARENTDEPTCODE, D.COMPANYCODE
				FROM 
						MST AS A
						INNER JOIN TYJINFWLIB.ORG_DEPT AS D
							ON	A.COMPANYCODE	= D.COMPANYCODE
							AND	A.DEPTCODE		= D.DEPTCODE
		
		
				UNION ALL
		
				SELECT A.DEPTCODE, A.PARENTDEPTCODE, A.COMPANYCODE
				FROM 
						TYJINFWLIB.ORG_DEPT AS A
						INNER JOIN PARENTDEPT AS B
							ON	A.DEPTCODE		= B.PARENTDEPTCODE
							AND A.COMPANYCODE	= B.COMPANYCODE
				WHERE 
						A.DISPLAYYN		= 'Y' 
				AND		A.COMPANYCODE	= P_COMPANYCODE
			)	
			SELECT
					(
						SELECT CASE WHEN COUNT(DEPTCODE) > 0 THEN 1 ELSE 0 END AS HASSUBDEPT
						FROM TYJINFWLIB.ORG_DEPT
						WHERE PARENTDEPTCODE = A.DEPTCODE AND COMPANYCODE = A.COMPANYCODE) AS HASSUBDEPT 
				--	DBO.UF_HASCHILDDEPT(A.DEPTCODE, A.COMPANYCODE) AS HASSUBDEPT
				,	A.*
			FROM 
					TYJINFWLIB.ORG_DEPT AS A
					INNER JOIN PARENTDEPT AS B
						ON	A.DEPTCODE		= B.DEPTCODE
						AND A.COMPANYCODE	= P_COMPANYCODE
			ORDER BY DEPTORDER ASC, DEPTLEVEL ASC;
			OPEN REFCURSOR;
		END MAIN1;
	ELSE
		MAIN2 : BEGIN
			DECLARE REFCURSOR2 CURSOR WITH RETURN FOR
			WITH MST (COMPANYCODE, DEPTCODE) AS (
				SELECT
							ADDCOMPANYCODE		AS COMPANYCODE
						,	DEPTCODE			AS DEPTCODE
				FROM
						TYJINFWLIB.ORG_ADDITIONALJOB
				WHERE
						ADDCOMPANYCODE	= P_COMPANYCODE
				AND		LOGINID			= P_LOGINID
				FETCH FIRST 1 ROWS ONLY
			)
			, PARENTDEPT (DEPTCODE, PARENTDEPTCODE, COMPANYCODE) AS (
				SELECT D.DEPTCODE, D.PARENTDEPTCODE, D.COMPANYCODE
				FROM 
						MST AS A
						INNER JOIN	TYJINFWLIB.ORG_DEPT AS D
							ON	A.COMPANYCODE	= D.COMPANYCODE
							AND	A.DEPTCODE		= D.DEPTCODE
		
		
				UNION ALL
		
				SELECT A.DEPTCODE, A.PARENTDEPTCODE, A.COMPANYCODE
				FROM 
						TYJINFWLIB.ORG_DEPT AS A
						INNER JOIN PARENTDEPT AS B
							ON	A.DEPTCODE		= B.PARENTDEPTCODE
							AND A.COMPANYCODE	= B.COMPANYCODE
				WHERE 
						A.DISPLAYYN		= 'Y' 
				AND		A.COMPANYCODE	= P_COMPANYCODE
			)	
			SELECT
						(
							SELECT CASE WHEN COUNT(DEPTCODE) > 0 THEN 1 ELSE 0 END AS HASSUBDEPT 
							FROM TYJINFWLIB.ORG_DEPT
							WHERE PARENTDEPTCODE = A.DEPTCODE AND COMPANYCODE = A.COMPANYCODE) AS HASSUBDEPT 
					--	DBO.UF_HASCHILDDEPT(A.DEPTCODE, A.COMPANYCODE) AS HASSUBDEPT
					,	A.*
			FROM 
					TYJINFWLIB.ORG_DEPT AS A
					INNER JOIN PARENTDEPT AS B
						ON	A.DEPTCODE		= B.DEPTCODE
						AND A.COMPANYCODE	= P_COMPANYCODE
			ORDER BY DEPTORDER ASC, DEPTLEVEL ASC;
			OPEN REFCURSOR2;
		END MAIN2;
	END IF;
END P1;