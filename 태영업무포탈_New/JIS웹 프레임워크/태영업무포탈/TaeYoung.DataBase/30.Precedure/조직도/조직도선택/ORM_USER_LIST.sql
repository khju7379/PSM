
-------------------------------------------------------------------------------------------
--
-- 프로시저명 : ORM_USER_LIST
-- 작성자     : 장경환
-- 작성일     : 2010-07-13
-- 설명       : 사용자정보 조회한다.
-- 예문       : CALL TYJINFWLIB.ORM_USER_LIST('1','hdh','ko')
-- DB2 변환   : 이전프로시져명 up_OrgChart_Select_User
--
-------------------------------------------------------------------------------------------
--DROP PROCEDURE TYJINFWLIB.ORM_USER_LIST
CREATE PROCEDURE TYJINFWLIB.ORM_USER_LIST
(
		P_COMPANYCODE	VARCHAR(50)
	,	P_LOGINID		VARCHAR(20)
	,	P_LANGCODE		VARCHAR(10)
)
	LANGUAGE SQL
	RESULT SETS 2
	
P1 : BEGIN
	DECLARE P_USERCOMPANYCODE VARCHAR(50);
	
	IF NOT EXISTS (	SELECT COMPANYCODE FROM TYJINFWLIB.ORG_USER WHERE COMPANYCODE = P_COMPANYCODE AND LOGINID = P_LOGINID UNION
					SELECT ADDCOMPANYCODE FROM TYJINFWLIB.ORG_ADDITIONALJOB WHERE ADDCOMPANYCODE = P_COMPANYCODE AND LOGINID = P_LOGINID) THEN
		SET P_USERCOMPANYCODE = (SELECT	COMPANYCODE FROM TYJINFWLIB.ORG_USER WHERE LOGINID = P_LOGINID FETCH FIRST 1 ROWS ONLY);
	END IF;
	
	
	
	IF NOT EXISTS (SELECT EMPID FROM TYJINFWLIB.ORG_USERLANG WHERE LANGCODE = P_LANGCODE AND COMPANYCODE = P_COMPANYCODE) THEN
		SET P_LANGCODE = 'en';
	END IF;
	
	MAIN1 : BEGIN
		-- 필요에 따라 확장
		DECLARE REFCURSOR1 CURSOR WITH RETURN FOR
		SELECT
					U.EMPID
				,	COALESCE(UL.USERLNAME, UL_K.USERLNAME)	AS USERNAME
				--,	ISNULL(UL.USERLNAME, '') + ISNULL(UL.USERFNAME, '') AS USERNAME
				,	U.EMAIL
				,	'N' AS CMGADMINYN
				--,	ISNULL(CMG.PERMISSIONYN, 'N') AS CMGADMINYN
				,	'N' AS CMGSUPERADMINYN
				--,	ISNULL(CMG.SUPERADMINYN, 'N') AS CMGSUPERADMINYN
				,	U.COMPANYCODE
		FROM 
				TYJINFWLIB.ORG_USER AS U
				LEFT OUTER JOIN TYJINFWLIB.ORG_USERLANG AS UL
					ON	U.EMPID			= UL.EMPID
					AND	U.COMPANYCODE	= UL.COMPANYCODE
					AND	UL.LANGCODE		= P_LANGCODE
				LEFT OUTER JOIN TYJINFWLIB.ORG_USERLANG AS UL_K
					ON	U.EMPID 		= UL_K.EMPID 
					AND	UL_K.LANGCODE 	= 'KO'
					AND	U.COMPANYCODE 	= UL_K.COMPANYCODE
				--LEFT OUTER JOIN DBO.TB_CUSTOMGROUPMANAGER CMG
				--	ON	U.LOGINID		= CMG.LOGINID
		WHERE 
				U.COMPANYCODE	= P_COMPANYCODE
		AND		U.LOGINID		= P_LOGINID
		AND		U.DISPLAYYN		= 'Y'
		
		UNION
		
		SELECT
					U.EMPID
				,	COALESCE(UL.USERLNAME, UL_K.USERLNAME)	AS USERNAME
				--,	ISNULL(UL.USERLNAME, '') + ISNULL(UL.USERFNAME, '') AS USERNAME
				,	U.EMAIL
				,	'N' AS CMGADMINYN
				--,	ISNULL(CMG.PERMISSIONYN, 'N') AS CMGADMINYN
				,	'N' AS CMGSUPERADMINYN
				--,	ISNULL(CMG.SUPERADMINYN, 'N') AS CMGSUPERADMINYN
				,	AJ.ADDCOMPANYCODE
		FROM 
				TYJINFWLIB.ORG_ADDITIONALJOB AS AJ
				INNER JOIN	TYJINFWLIB.ORG_USER AS U
					ON	AJ.COMPANYCODE	= U.COMPANYCODE
					AND AJ.EMPID		= U.EMPID
				LEFT OUTER JOIN TYJINFWLIB.ORG_USERLANG AS UL
					ON	U.EMPID			= UL.EMPID
					AND	U.COMPANYCODE	= UL.COMPANYCODE
					AND	UL.LANGCODE		= P_LANGCODE
				LEFT OUTER JOIN TYJINFWLIB.ORG_USERLANG AS UL_K
					ON	U.EMPID 		= UL_K.EMPID 
					AND	UL_K.LANGCODE 	= 'KO'
					AND	U.COMPANYCODE 	= UL_K.COMPANYCODE
				--LEFT OUTER JOIN DBO.TB_CUSTOMGROUPMANAGER CMG
				--	ON	U.LOGINID		= CMG.LOGINID
		WHERE 
				AJ.ADDCOMPANYCODE	= P_COMPANYCODE
		AND		AJ.LOGINID			= P_LOGINID
		AND		U.DISPLAYYN			= 'Y'
		
		UNION
		
		SELECT
					U.EMPID
				,	COALESCE(UL.USERLNAME, UL_K.USERLNAME)	AS USERNAME
				--,	ISNULL(UL.USERLNAME, '') + ISNULL(UL.USERFNAME, '') AS USERNAME
				,	U.EMAIL
				,	'N' AS CMGADMINYN
				--,	ISNULL(CMG.PERMISSIONYN, 'N') AS CMGADMINYN
				,	'N' AS CMGSUPERADMINYN
				--,	ISNULL(CMG.SUPERADMINYN, 'N') AS CMGSUPERADMINYN
				,	U.COMPANYCODE
		FROM 
				TYJINFWLIB.ORG_USER AS U
				LEFT OUTER JOIN TYJINFWLIB.ORG_USERLANG AS UL
					ON	U.EMPID			= UL.EMPID
					AND	U.COMPANYCODE	= UL.COMPANYCODE
					AND	UL.LANGCODE		= P_LANGCODE
				LEFT OUTER JOIN TYJINFWLIB.ORG_USERLANG AS UL_K
					ON	U.EMPID 		= UL_K.EMPID 
					AND	UL_K.LANGCODE 	= 'KO'
					AND	U.COMPANYCODE 	= UL_K.COMPANYCODE
				--LEFT OUTER JOIN DBO.TB_CUSTOMGROUPMANAGER CMG
				--	ON	U.LOGINID		= CMG.LOGINID
		WHERE 
				U.COMPANYCODE	= P_USERCOMPANYCODE
		AND		U.LOGINID		= P_LOGINID
		AND		U.DISPLAYYN		= 'Y';
		OPEN REFCURSOR1;
	END MAIN1;
	
	MAIN2 : BEGIN		
		-- 사용자의 상위 부서
		DECLARE P_PRECOMPANYCD		VARCHAR(50);
		IF NOT EXISTS (	SELECT COMPANYCODE FROM TYJINFWLIB.ORG_USER WHERE COMPANYCODE = P_COMPANYCODE AND LOGINID = P_LOGINID UNION
						SELECT ADDCOMPANYCODE FROM TYJINFWLIB.ORG_ADDITIONALJOB WHERE ADDCOMPANYCODE = P_COMPANYCODE AND LOGINID = P_LOGINID) THEN
			SET P_PRECOMPANYCD = P_USERCOMPANYCODE;
		ELSE
			SET P_PRECOMPANYCD = P_COMPANYCODE;
		END IF;
						
		IF EXISTS (SELECT MAINDEPTCODE FROM TYJINFWLIB.ORG_USER WHERE COMPANYCODE = P_PRECOMPANYCD AND LOGINID = P_LOGINID) THEN
			DTL1 : BEGIN
				DECLARE REFCURSOR2 CURSOR WITH RETURN FOR
				WITH MST (COMPANYCODE, DEPTCODE) AS (
					SELECT
								COMPANYCODE		AS COMPANYCODE
							,	MAINDEPTCODE	AS DEPTCODE
					FROM
							TYJINFWLIB.ORG_USER
					WHERE
							COMPANYCODE	= P_PRECOMPANYCD
					AND		LOGINID		= P_LOGINID
					FETCH FIRST 1 ROWS ONLY
				)
				, PARENTDEPT (DEPTCODE, PARENTDEPTCODE, COMPANYCODE) AS (
					SELECT D.DEPTCODE, D.PARENTDEPTCODE, D.COMPANYCODE
					FROM 
							MST AS A
							INNER JOIN TYJINFWLIB.ORG_DEPT AS D
								ON	A.COMPANYCODE	= D.COMPANYCODE
								AND	A.DEPTCODE		= D.DEPTCODE
			
			
					UNION ALL
			
					SELECT A.DEPTCODE, A.PARENTDEPTCODE, A.COMPANYCODE
					FROM 
							TYJINFWLIB.ORG_DEPT AS A
							INNER JOIN PARENTDEPT AS B
								ON	A.DEPTCODE		= B.PARENTDEPTCODE
								AND A.COMPANYCODE	= B.COMPANYCODE
					WHERE 
							A.DISPLAYYN		= 'Y' 
					AND		A.COMPANYCODE	= P_PRECOMPANYCD
				)	
				SELECT
						(
							SELECT CASE WHEN COUNT(DEPTCODE) > 0 THEN 1 ELSE 0 END AS HASSUBDEPT
							FROM TYJINFWLIB.ORG_DEPT
							WHERE PARENTDEPTCODE = A.DEPTCODE AND COMPANYCODE = A.COMPANYCODE) AS HASSUBDEPT 
					--	DBO.UF_HASCHILDDEPT(A.DEPTCODE, A.COMPANYCODE) AS HASSUBDEPT
					,	A.*
				FROM 
						TYJINFWLIB.ORG_DEPT AS A
						INNER JOIN PARENTDEPT AS B
							ON	A.DEPTCODE		= B.DEPTCODE
							AND A.COMPANYCODE	= P_PRECOMPANYCD
				ORDER BY ORG_CD ASC -- DEPTORDER ASC, DEPTLEVEL ASC				-- 부서 레벨 순서가 안맞아서 ORG_CD로 수정 2017-05-27 장윤호
				;
				OPEN REFCURSOR2;
			END DTL1;
		ELSE
			DTL2 : BEGIN
				DECLARE REFCURSOR3 CURSOR WITH RETURN FOR
				WITH MST (COMPANYCODE, DEPTCODE) AS (
					SELECT
								ADDCOMPANYCODE		AS COMPANYCODE
							,	DEPTCODE			AS DEPTCODE
					FROM
							TYJINFWLIB.ORG_ADDITIONALJOB
					WHERE
							ADDCOMPANYCODE	= P_PRECOMPANYCD
					AND		LOGINID			= P_LOGINID
					FETCH FIRST 1 ROWS ONLY
				)
				, PARENTDEPT (DEPTCODE, PARENTDEPTCODE, COMPANYCODE) AS (
					SELECT D.DEPTCODE, D.PARENTDEPTCODE, D.COMPANYCODE
					FROM 
							MST AS A
							INNER JOIN	TYJINFWLIB.ORG_DEPT AS D
								ON	A.COMPANYCODE	= D.COMPANYCODE
								AND	A.DEPTCODE		= D.DEPTCODE
			
			
					UNION ALL
			
					SELECT A.DEPTCODE, A.PARENTDEPTCODE, A.COMPANYCODE
					FROM 
							TYJINFWLIB.ORG_DEPT AS A
							INNER JOIN PARENTDEPT AS B
								ON	A.DEPTCODE		= B.PARENTDEPTCODE
								AND A.COMPANYCODE	= B.COMPANYCODE
					WHERE 
							A.DISPLAYYN		= 'Y' 
					AND		A.COMPANYCODE	= P_PRECOMPANYCD
				)	
				SELECT
							(
								SELECT CASE WHEN COUNT(DEPTCODE) > 0 THEN 1 ELSE 0 END AS HASSUBDEPT 
								FROM TYJINFWLIB.ORG_DEPT
								WHERE PARENTDEPTCODE = A.DEPTCODE AND COMPANYCODE = A.COMPANYCODE) AS HASSUBDEPT 
						--	DBO.UF_HASCHILDDEPT(A.DEPTCODE, A.COMPANYCODE) AS HASSUBDEPT
						,	A.*
				FROM 
						TYJINFWLIB.ORG_DEPT AS A
						INNER JOIN PARENTDEPT AS B
							ON	A.DEPTCODE		= B.DEPTCODE
							AND A.COMPANYCODE	= P_PRECOMPANYCD
				ORDER BY ORG_CD ASC -- DEPTORDER ASC, DEPTLEVEL ASC				-- 부서 레벨 순서가 안맞아서 ORG_CD로 수정 2017-05-27 장윤호
				;
				OPEN REFCURSOR3;
			END DTL2;
		END IF;
	END MAIN2;
END P1