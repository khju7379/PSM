-------------------------------------------------------------------------------------------
-- 프로시저명 : ORG_USER_LIST_TREE_SUB
-- 작성자     : 장윤호	
-- 작성일     : 2017-03-28
-- 설명       : 전사조직도 사용자 트리 서브 리스트
-- 예문       : CALL TYJINFWLIB.ORG_USER_LIST_TREE_SUB ('ko', 'SEOHAN', 'SHBDDD')
-- DB2 변환   : 
-------------------------------------------------------------------------------------------
--DROP PROCEDURE TYJINFWLIB.ORG_USER_LIST_TREE_SUB;
CREATE PROCEDURE TYJINFWLIB.ORG_USER_LIST_TREE_SUB 
(
		P_LANGCD			VARCHAR(10)
	,	P_COMPANYCODE		VARCHAR(10)
	,	P_DEPTCODE			VARCHAR(12)
)
	RESULT SETS 1
	LANGUAGE SQL
	SET OPTION
	ALWCPYDTA = *OPTIMIZE
M1: BEGIN 
	S1 : BEGIN
		DECLARE REFCURSOR CURSOR WITH RETURN FOR

		WITH CTE(COMPANYCODE, PARENTDEPTCODE, DEPTCODE, DEPTORDER, DEPTLEVEL, ORGLEVEL, DISPLAYNAME, ORGSORT, DIFF) AS (
			SELECT
					COMPANYCODE
				,	PARENTDEPTCODE
				,	DEPTCODE
				,	DEPTORDER
				,	DEPTLEVEL
				,	CASE
						WHEN COALESCE(ORGLEVEL, 0) >= 7
						THEN 6
						ELSE COALESCE(ORGLEVEL, 0)
						END AS ORGLEVEL
				,	DISPLAYNAME
				,	1 AS ORGSORT
				,	0 AS DIFF
			FROM
					ORG_DEPT
			WHERE
					COMPANYCODE		= P_COMPANYCODE
			AND		DEPTCODE		= P_DEPTCODE	

			UNION ALL

			SELECT
					D.COMPANYCODE
				,	D.PARENTDEPTCODE
				,	D.DEPTCODE 
				,	D.DEPTORDER
				,	D.DEPTLEVEL
				,	COALESCE(D.ORGLEVEL, 0) AS ORGLEVEL
				,	D.DISPLAYNAME
				,	COALESCE(ORGSORT, 0) + 1 AS ORGSORT
				,	COALESCE(D.ORGLEVEL, 0) - COALESCE(C.ORGLEVEL, 0)  AS DIFF
			FROM
					CTE AS C
					INNER JOIN ORG_DEPT AS D
						ON	C.DEPTCODE					= D.PARENTDEPTCODE
						AND COALESCE(D.DPARTNER, 0)		<> '1'
						AND D.DISPLAYYN					= 'Y'
						AND D.DEPTCODE					NOT IN ('ZZZZZZZZZZ')	
			WHERE
					D.COMPANYCODE		= P_COMPANYCODE
		),
		LIST AS (
			SELECT 
					C.COMPANYCODE
				,	C.DEPTCODE
				,	C.DEPTORDER
				,	C.PARENTDEPTCODE
				,	C.DISPLAYNAME AS DEPTNAME
				,	U.EMPID
				,	U.USERNAME
				,	U.DUTYNAME
				,	U.RANKNAME
				,	U.USERIMAGE
				,	U.TEAMCHIEFYN
				,	COALESCE(C.ORGLEVEL, 7) AS ORGLEVEL
				,	COALESCE(C.DIFF, 1) AS DIFF
				,	U.ADDJOB
				,	CASE
						WHEN U.DSORTNO < 150
						THEN 0
						ELSE 1
						END AS LEAF
				,	C.ORGSORT
				,	DENSE_RANK() OVER (PARTITION BY DEPTCODE ORDER BY ORGSORT ASC, ORGLEVEL ASC, DEPTCODE, DSORTNO, RSORTNO, U.EMPID ASC) AS RO
				,	ROW_NUMBER() OVER (ORDER BY ORGSORT ASC, DEPTORDER ASC, COALESCE(DSORTNO, 99999), COALESCE(RSORTNO, 99999), ORGLEVEL, EMPID ASC) AS ROW_NO
			FROM
					CTE AS C
					LEFT OUTER JOIN (	SELECT
												U.COMPANYCODE
											,	U.EMPID
											,	UN.USERLNAME || UN.USERFNAME AS USERNAME
											,	U.MAINDEPTCODE
											,	D.DEPTNAME
											,	UD.DUTYNAME
											,	COALESCE(UD.SORTNO, 99999) AS DSORTNO
											,	UR.RANKNAME
											,	COALESCE(UR.SORTNO, 99999) AS RSORTNO 
											,	'' AS USERIMAGE
											,	UD.TEAMCHIEFYN
											,	'0' AS ADDJOB
										FROM
												ORG_USER AS U
												LEFT JOIN ORG_USERLANG AS UN	
													ON	U.COMPANYCODE	= UN.COMPANYCODE	
													AND U.EMPID			= UN.EMPID
													AND UN.LANGCODE		= P_LANGCD
												LEFT JOIN ORG_DEPTLANG AS D
													ON	U.MAINDEPTCODE	= D.DEPTCODE 
													AND U.COMPANYCODE	= D.COMPANYCODE
													AND D.LANGCODE		= P_LANGCD
												LEFT OUTER JOIN ORG_DUTY AS UD
													ON U.DUTYCODE		= UD.DUTYCODE
													AND UD.LANGCODE		= P_LANGCD
												LEFT OUTER JOIN ORG_RANK AS UR	
													ON	U.RANKCODE		= UR.RANKCODE
													AND UR.LANGCODE		= P_LANGCD
										WHERE
												U.COMPANYCODE	= P_COMPANYCODE
										AND		U.DISPLAYYN		= 'Y'
										AND		U.ONSITE IS NULL

										UNION ALL
		
										SELECT
												U.COMPANYCODE
											,	U.EMPID
											,	UN.USERLNAME || UN.USERFNAME AS USERNAME
											,	A.DEPTCODE AS MAINDEPTCODE
											,	D.DEPTNAME
											,	UD.DUTYNAME
											,	COALESCE(UD.SORTNO, 99999) AS DSORTNO
											,	UR.RANKNAME
											,	COALESCE(UR.SORTNO, 99999) AS RSORTNO 
											,	'' AS USERIMAGE
											,	UD.TEAMCHIEFYN
											,	'1' AS ADDJOB
										FROM
												ORG_ADDITIONALJOB AS A
												INNER JOIN ORG_USER AS U
													ON 	A.COMPANYCODE 	= P_COMPANYCODE--U.COMPANYCODE
													AND A.EMPID   		= U.EMPID
													AND U.DISPLAYYN  	= 'Y'	
												LEFT JOIN ORG_USERLANG AS UN	
													ON 	U.COMPANYCODE 	= UN.COMPANYCODE	
													AND U.EMPID 		= UN.EMPID
													AND UN.LANGCODE 	= P_LANGCD
												LEFT JOIN ORG_DEPTLANG AS D
													ON 	U.MAINDEPTCODE 	= D.DEPTCODE 
													AND U.COMPANYCODE 	= D.COMPANYCODE
													AND D.LANGCODE 		= P_LANGCD
												LEFT OUTER JOIN ORG_DUTY AS UD
													ON 	A.DUTYCODE  	= UD.DUTYCODE
													AND UD.LANGCODE  	= P_LANGCD
												LEFT OUTER JOIN ORG_RANK AS UR
													ON 	A.RANKCODE  	= UR.RANKCODE
													AND UR.LANGCODE  	= P_LANGCD
										WHERE
												A.COMPANYCODE = P_COMPANYCODE
									) AS U
						ON C.DEPTCODE  = U.MAINDEPTCODE
			WHERE
					PARENTDEPTCODE IS NOT NULL
		)
		SELECT * FROM (
			SELECT DISTINCT
				COMPANYCODE
			,	TRIM(DEPTCODE) || (CASE WHEN RO = 1 OR ORGLEVEL >= 7 THEN '' ELSE '_' || EMPID END) AS DEPTCODE
			,	CASE
					WHEN RO = 1			THEN TRIM(PARENTDEPTCODE)
					WHEN ORGLEVEL < 7	THEN TRIM(DEPTCODE)
					ELSE TRIM(PARENTDEPTCODE)
					END AS PARENTDEPTCODE
			,	DEPTNAME
			,	DEPTORDER
			,	EMPID
			,	USERNAME
			,	DUTYNAME
			,	RANKNAME
			,	USERIMAGE
			,	TEAMCHIEFYN
			,	ORGLEVEL
			,	ORGSORT
			,	CASE
					WHEN RO = 1 AND ORGLEVEL <= 7 
					THEN DIFF
					ELSE 1
					END AS DIFF
			,	ADDJOB
			,	LEAF
			,	RO
		FROM
				LIST
		WHERE EMPID <> '000000'
			AND DEPTCODE <> 'FBDBBA'
			AND DEPTCODE <> 'FBDCBA'
			AND DEPTCODE <> 'FBABAA' 
			AND DEPTCODE <> 'CADAAA'
		) A
		ORDER BY DEPTORDER ASC
		;
		OPEN REFCURSOR;
	END S1;
END M1;