--DROP PROCEDURE TYJINFWLIB.ORG_USER_GET_DEPT;
-------------------------------------------------------------------------------------------
--
-- 프로시저명 : ORG_USER_GET_DEPT
-- 작성자     : 김희섭
-- 작성일     : 2014-04-03
-- 설명       : PPT 사용자 정보
-- 예문       : CALL TYJINFWLIB.ORG_USER_GET_DEPT (1, 20, 'PLANNING', 'ko', '', '')
-- DB2 변환 : 
--		프렌지 변환 : PTORGUSR70L4 -> ORG_USER_GET_DEPT
-------------------------------------------------------------------------------------------
CREATE PROCEDURE TYJINFWLIB.ORG_USER_GET_DEPT
(
    IN P_CURRENTPAGEINDEX INTEGER
   ,IN P_PAGESIZE INTEGER
   ,IN P_COMPANYCODE CHAR(10)
   ,IN P_LANGCODE    CHAR(2)
   ,IN P_DEPTCD      CHAR(10)
   ,IN P_SEARCHCONDITION VARCHAR(100)
)
    LANGUAGE SQL
    RESULT SETS 2

P1: BEGIN
    DECLARE P_STNUM INTEGER ;
    DECLARE P_FNNUM INTEGER ;

    DECLARE GLOBAL TEMPORARY TABLE SESSION.PTORGUSR70L4(
               COMPANYCODE      CHAR(10)
            ,  COMPANY          VARGRAPHIC(2000) CCSID 1200
            ,  EMPID            CHAR(10)
            ,  USERNAME         VARGRAPHIC(2000) CCSID 1200
            ,  DEPTNAME         VARGRAPHIC(2000) CCSID 1200
            ,  RANKCODE         CHAR(3)
            ,  RANKNAME         VARGRAPHIC(2000) CCSID 1200
            ,  MAINDEPTCODE     CHAR(10)
            --,  CELLPHONE        VARCHAR(20) 길이 초과로 인한 길이변경
			,  CELLPHONE        VARCHAR(100)
			,	SITECOMPANY		CHAR(10)
    ) WITH REPLACE ;
    
    S1 : BEGIN -- 값 설정
        SET P_CURRENTPAGEINDEX = COALESCE ( P_CURRENTPAGEINDEX , 1 ) ;
        SET P_PAGESIZE = COALESCE ( P_PAGESIZE , 10 ) ;
        SET P_STNUM = ( P_PAGESIZE * ( P_CURRENTPAGEINDEX - 1 ) ) + 1 ;
        SET P_FNNUM = P_PAGESIZE * P_CURRENTPAGEINDEX ;
		SET P_LANGCODE = LOWER(P_LANGCODE);
    END S1 ;

    INSERT INTO SESSION.PTORGUSR70L4
	WITH CTE(COMPANYCODE, DEPTCODE, LVL) AS (
		SELECT
			COMPANYCODE
		,	DEPTCODE
		,	0 AS LVL
		FROM TYJINFWLIB.ORG_DEPT WHERE COMPANYCODE = P_COMPANYCODE AND DEPTCODE LIKE P_DEPTCD || '%'
		UNION ALL
		SELECT
			B.COMPANYCODE
		,	B.DEPTCODE
		,	CTE.LVL + 1 AS LVL
		FROM TYJINFWLIB.ORG_DEPT AS B, CTE
		WHERE CTE.COMPANYCODE = B.COMPANYCODE AND CTE.DEPTCODE = B.PARENTDEPTCODE
	)
    SELECT A.COMPANYCODE
         , B.COMPANY
         , A.EMPID
         , C.USERLNAME || C.USERFNAME AS USERNAME
         , D.DEPTNAME
         , A.RANKCODE
         , E.RANKNAME
         , A.MAINDEPTCODE
         , COALESCE(A.CELLPHONE,A.EXTENSIONNUMBER) AS CELLPHONE
		 ,	A.SITECOMPANY
      FROM TYJINFWLIB.ORG_USER AS A
      JOIN TYJINFWLIB.ORG_COMPANYLANG AS B 
        ON A.COMPANYCODE  = B.COMPANYCODE 
       AND B.LANGUAGECODE = P_LANGCODE
      JOIN TYJINFWLIB.ORG_USERLANG AS C 
        ON A.COMPANYCODE = C.COMPANYCODE 
       AND A.EMPID       = C.EMPID 
       AND C.LANGCODE    = P_LANGCODE
      JOIN TYJINFWLIB.ORG_DEPTLANG AS D 
        ON A.COMPANYCODE  = D.COMPANYCODE 
       AND A.MAINDEPTCODE = D.DEPTCODE 
       AND D.LANGCODE     = P_LANGCODE
      LEFT OUTER JOIN TYJINFWLIB.ORG_RANK AS E 
        ON A.COMPANYCODE   = E.COMPANYCODE 
       AND A.RANKCODE      = E.RANKCODE 
       AND E.LANGCODE      = P_LANGCODE
     WHERE 
		TRIM(A.COMPANYCODE) || TRIM(A.MAINDEPTCODE)  IN (
			SELECT DISTINCT TRIM(COMPANYCODE) || TRIM(DEPTCODE) AS DPTCD FROM CTE
		)
	--		A.COMPANYCODE   = P_COMPANYCODE
    --   AND A.MAINDEPTCODE IN ()
       AND (C.USERLNAME || C.USERFNAME LIKE P_SEARCHCONDITION || '%'
        OR A.EMPID LIKE P_SEARCHCONDITION || '%')
       AND A.EMPID IS NOT NULL
       ;
           
    M1 : BEGIN
    DECLARE REFCURSOR CURSOR WITH RETURN FOR
        SELECT COMPANYCODE
             , COMPANY
             , EMPID
             , USERNAME
             , MAINDEPTCODE
             , DEPTNAME
             , RANKCODE
             , RANKNAME
             , CELLPHONE
			 , SITECOMPANY
         FROM(
			 SELECT ROW_NUMBER() OVER() AS ROWNO
				 , COMPANYCODE
				 , COMPANY
				 , EMPID
				 , USERNAME
				 , DEPTNAME
				 , RANKCODE
				 , RANKNAME
				 , MAINDEPTCODE
				 , CELLPHONE
				 , SITECOMPANY
			  FROM SESSION.PTORGUSR70L4
          ) AS A
         WHERE ROWNO BETWEEN P_STNUM AND P_FNNUM
         ;

        OPEN REFCURSOR ;
    END M1;
    
    M2 : BEGIN
    DECLARE REFCURSOR2 CURSOR WITH RETURN FOR
        SELECT COUNT(*) AS TOTALCOUNT
        FROM SESSION.PTORGUSR70L4
        ;
        OPEN REFCURSOR2 ;
    END M2;
END P1