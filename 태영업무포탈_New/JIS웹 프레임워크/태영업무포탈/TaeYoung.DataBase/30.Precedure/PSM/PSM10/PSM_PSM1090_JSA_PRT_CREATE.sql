--  Generate SQL 
--  Version:                   	V7R4M0 190621 
--  Generated on:              	23-07-24 16:26:48 
--  Relational Database:       	S78E0180 
--  Standards Option:          	Db2 for i 
DROP PROCEDURE PSSCMLIB.PSM_PSM1090_JSA_PRT_CREATE;
  
CREATE PROCEDURE PSSCMLIB.PSM_PSM1090_JSA_PRT_CREATE ( 
	IN P_SESSION VARCHAR(24) , 
	IN P_BLASS VARCHAR(2) , 
	IN P_MLASS VARCHAR(2) , 
	IN P_SLASS VARCHAR(3) , 
	IN P_SEQ NUMERIC(3, 0) , 
	IN P_SABUN VARCHAR(6) ) 
	LANGUAGE SQL 
	SPECIFIC PSSCMLIB.PSM_PSM1090_JSA_PRT_CREATE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = *NONE , 
	DLYPRP = *NO , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	RDBCNNMTH = *RUW , 
	SRTSEQ = *HEX   
	P1 : BEGIN 
  
-- 변수 선언       
	DECLARE SQLCODE INT DEFAULT 0 ; 
  
	DECLARE V_PRSESSIONID VARCHAR ( 24 ) ; 
	DECLARE V_PRROWNUM NUMERIC ( 10 , 0 ) DEFAULT 0 ; 
	DECLARE V_PRBLASS VARCHAR ( 2 ) ; 
	DECLARE V_PRMLASS VARCHAR ( 2 ) ; 
	DECLARE V_PRSLASS VARCHAR ( 3 ) ; 
	DECLARE V_PRSEQ NUMERIC ( 3 , 0 ) DEFAULT 0 ; 
	DECLARE V_PRITEMSEQ NUMERIC ( 3 , 0 ) DEFAULT 0 ; 
	DECLARE V_PRITEMTEXT VARCHAR ( 400 ) ; 
	DECLARE V_PRTOOLTEXT VARCHAR ( 400 ) ; 
	DECLARE V_PRRSUBSEQ NUMERIC ( 3 , 0 ) DEFAULT 0 ; 
  
	DECLARE V_PRRISKCNT NUMERIC ( 1 , 0 ) DEFAULT 0 ; 
	DECLARE V_PRRISKSOLID NUMERIC ( 1 , 0 ) DEFAULT 0 ; 
	DECLARE V_PRRISKDEGREE NUMERIC ( 1 , 0 ) DEFAULT 0 ; 
  
	DECLARE V_PREREFORMCNT NUMERIC ( 1 , 0 ) DEFAULT 0 ; 
	DECLARE V_PREREFORMSOLID NUMERIC ( 1 , 0 ) DEFAULT 0 ; 
	DECLARE V_PREREFORMDEGREE NUMERIC ( 1 , 0 ) DEFAULT 0 ; 
  
  
	DECLARE V_PRRISKTEXT VARCHAR ( 400 ) ; 
	DECLARE V_PRESUBSEQ NUMERIC ( 3 , 0 ) DEFAULT 0 ; 
	DECLARE V_PREREFORMTEXT VARCHAR ( 400 ) ; 
	DECLARE V_PRHIGB VARCHAR ( 1 ) ; 
	DECLARE V_PRHIDAT VARCHAR ( 10 ) ; 
	DECLARE V_PRHITIM VARCHAR ( 8 ) ; 
	DECLARE V_PRHISAB VARCHAR ( 6 ) ; 
  
	DECLARE V_ITEMSEQ NUMERIC ( 3 , 0 ) DEFAULT 0 ; 
	DECLARE V_ITEMTEXT VARCHAR ( 400 ) ; 
	DECLARE V_TOOLTEXT VARCHAR ( 400 ) ; 
	DECLARE V_RSUBSEQ NUMERIC ( 3 , 0 ) DEFAULT 0 ; 
	DECLARE V_RISKTEXT VARCHAR ( 400 ) ; 
	DECLARE V_ESUBSEQ NUMERIC ( 3 , 0 ) DEFAULT 0 ; 
	DECLARE V_REFORMTEXT VARCHAR ( 400 ) ; 
  
	DECLARE V_HSPLCODE_OLD VARCHAR ( 4 ) ; 
	DECLARE V_HSWKCODE_OLD VARCHAR ( 3 ) ; 
	DECLARE V_HSINDEX_OLD NUMERIC ( 2 , 0 ) DEFAULT 0 ; 
	DECLARE V_HCLEACODE_OLD NUMERIC ( 2 , 0 ) DEFAULT 0 ; 
	DECLARE V_HCCAUINDEX_OLD NUMERIC ( 2 , 0 ) DEFAULT 0 ; 
  
	DECLARE V_DETAIL_CNT INT ; 
	DECLARE V_RISK_CNT INT ; 
	DECLARE V_REFORM_CNT INT ; 
  
	DECLARE V_CNT INT ; 
	DECLARE V_ROWCNT INT ; 
  
  
	DECLARE V_COUNT INT ; 
  
	DECLARE V_ROWCNTTEST INT ; 
  
	SET V_CNT = 0 ; 
	SET V_ROWCNT = 0 ; 
	SET V_COUNT = 0 ; 
  
	DELETE FROM PSSCMLIB . PSM_JSA_PRINT 
	WHERE PRSESSIONID = P_SESSION ; 
  
/* JSA 임시파일 생성 */ 
	INSERT INTO PSSCMLIB . PSM_JSA_PRINT 
	( 
	PRSESSIONID , 
	PRROWNUM , 
	PRBLASS , 
	PRMLASS , 
	PRSLASS , 
	PRSEQ , 
	PRITEMSEQ , 
	PRITEMTEXT , 
	PRTOOLTEXT , 
	PRHIGB , 
	PRHIDAT , 
	PRHITIM , 
	PRHISAB 
	) 
	SELECT 
	P_SESSION , 
	ROWNUMBER ( ) OVER ( ORDER BY JSDBLASS , JSDMLASS , JSDSLASS , JSDSEQ , JSDITEMSEQ ) AS ROWNUM , 
	JSDBLASS , 
	JSDMLASS , 
	JSDSLASS , 
	JSDSEQ , 
	JSDITEMSEQ , 
	JSDITEMTEXT , 
	JSDTOOLTEXT , 
	'A' , 
	CURRENT_DATE , 
	CURRENT_TIME , 
	P_SABUN 
	FROM PSSCMLIB . PSM_JSA_DETAIL 
	WHERE JSDBLASS = P_BLASS 
	AND JSDMLASS = P_MLASS 
	AND JSDSLASS = P_SLASS 
	AND JSDSEQ = P_SEQ ; 
  
	/* JSA 임시 파일 조회 */ 
	R1 : FOR C1 AS	 
			SELECT PRSESSIONID , 
			PRROWNUM , 
			PRBLASS , 
			PRMLASS , 
			PRSLASS , 
			PRSEQ , 
			PRITEMSEQ , 
			PRITEMTEXT , 
			PRTOOLTEXT , 
			PRRISKCNT , 
			PRRISKSOLID , 
			PRRISKDEGREE , 
			PREREFORMCNT , 
			PREREFORMSOLID , 
			PREREFORMDEGREE , 
			PRHIGB , 
			PRHIDAT , 
			PRHITIM , 
			PRHISAB 
			FROM PSSCMLIB . PSM_JSA_PRINT 
			WHERE PRSESSIONID = P_SESSION 
			AND PRBLASS = P_BLASS 
			AND PRMLASS = P_MLASS 
			AND PRSLASS = P_SLASS 
			AND PRSEQ = P_SEQ 
			ORDER BY PRSESSIONID , PRBLASS , PRMLASS , PRSLASS , PRSEQ , PRROWNUM 
		DO 
  
		SET V_PRROWNUM = 0 ; 
		SET V_PRITEMSEQ = 0 ; 
		SET V_PRITEMTEXT = '' ; 
		SET V_PRTOOLTEXT = '' ; 
		SET V_PRRSUBSEQ = 0 ; 
		SET V_PRRISKTEXT = '' ; 
		SET V_PRESUBSEQ = 0 ; 
		SET V_PREREFORMTEXT = '' ; 
		SET V_PRHISAB = '' ; 
  
		SET V_PRRISKCNT = 0 ; 
		SET V_PRRISKSOLID = 0 ; 
		SET V_PRRISKDEGREE = 0 ; 
		SET V_PREREFORMCNT = 0 ; 
		SET V_PREREFORMSOLID = 0 ; 
		SET V_PREREFORMDEGREE = 0 ; 
  
  
		SET V_PRROWNUM = PRROWNUM ; 
		SET V_PRITEMSEQ = PRITEMSEQ ; 
		SET V_PRITEMTEXT = PRITEMTEXT ; 
		SET V_PRTOOLTEXT = PRTOOLTEXT ; 
  
		SET V_PRRISKCNT = PRRISKCNT ; 
		SET V_PRRISKSOLID = PRRISKSOLID ; 
		SET V_PRRISKDEGREE = PRRISKDEGREE ; 
		SET V_PREREFORMCNT = PREREFORMCNT ; 
		SET V_PREREFORMSOLID = PREREFORMSOLID ; 
		SET V_PREREFORMDEGREE = PREREFORMDEGREE ; 
  
  
		SET V_PRHISAB = PRHISAB ; 
  
		/* RISK 레코드 개수 */ 
		SELECT 
		COUNT ( * ) INTO V_RISK_CNT 
		FROM PSSCMLIB . PSM_JSA_RISK 
		WHERE JSRBLASS = P_BLASS 
		AND JSRMLASS = P_MLASS 
		AND JSRSLASS = P_SLASS 
		AND JSRSEQ = P_SEQ 
		AND JSRITEMSEQ = V_PRITEMSEQ ; 
  
		/* REFORM 레코드 개수 */ 
		SELECT 
		COUNT ( * ) INTO V_REFORM_CNT 
		FROM PSSCMLIB . PSM_JSA_REFORM 
		WHERE JSEBLASS = P_BLASS 
		AND JSEMLASS = P_MLASS 
		AND JSESLASS = P_SLASS 
		AND JSESEQ = P_SEQ 
		AND JSEITEMSEQ = V_PRITEMSEQ ; 
  
		IF V_RISK_CNT > V_REFORM_CNT THEN 
  
			SET V_CNT = V_RISK_CNT ; 
  
		ELSE 
  
			SET V_CNT = V_REFORM_CNT ; 
  
		END IF ; 
  
		SET V_ROWCNT = 1 ; 
  
		W1 : WHILE ( V_CNT >= V_ROWCNT ) DO 
  
				IF V_ROWCNT > V_CNT THEN 
					LEAVE W1 ; 
				END IF ; 
  
				SET V_PRRSUBSEQ = 0 ; 
				SET V_PRRISKTEXT = '' ; 
				 
				/* 위험성 */ 
				R11 : FOR C11 AS 
  
						/* RISK - 레코드 번호 가져와서 업데이트 */ 
						WITH MAST AS 
						( 
						SELECT 
						ROWNUMBER ( ) OVER ( ORDER BY JSRBLASS , JSRMLASS , JSRSLASS , JSRSEQ , JSRITEMSEQ ) AS ROWNUM , 
						JSRSUBSEQ , 
						JSRRISKTEXT , 
						JSRRISKCNT , 
						JSRRISKSOLID , 
						JSRRISKDEGREE 
						FROM PSSCMLIB . PSM_JSA_RISK 
						WHERE JSRBLASS = P_BLASS 
						AND JSRMLASS = P_MLASS 
						AND JSRSLASS = P_SLASS 
						AND JSRSEQ = P_SEQ 
						AND JSRITEMSEQ = V_PRITEMSEQ 
						) 
  
						SELECT 
						* 
						FROM MAST 
						WHERE ROWNUM = V_ROWCNT 
						FETCH FIRST 1 ROWS ONLY 
  
					DO 
  
					SET V_PRRSUBSEQ = 0 ; 
					SET V_PRRISKTEXT = '' ; 
  
					SET V_PRRSUBSEQ = JSRSUBSEQ ; 
					SET V_PRRISKTEXT = JSRRISKTEXT ; 
  
					SET V_PRRISKCNT = JSRRISKCNT ; 
					SET V_PRRISKSOLID = JSRRISKSOLID ; 
					SET V_PRRISKDEGREE = JSRRISKDEGREE ; 
  
				END FOR ;  --R11..END 
				SET V_PRESUBSEQ = 0 ; 
				SET V_PREREFORMTEXT = '' ; 
  
				/* 개선대책 */ 
				R21 : FOR C21 AS 
  
						/* REFORM - 레코드 번호 가져와서 업데이트 */ 
						WITH MAST AS 
						( 
						SELECT 
						ROWNUMBER ( ) OVER ( ORDER BY JSEBLASS , JSEMLASS , JSESLASS , JSESEQ , JSEITEMSEQ ) AS ROWNUM , 
						JSESUBSEQ , 
						JSEREFORMTEXT , 
						JSEREFORMCNT , 
						JSEREFORMSOLID , 
						JSEREFORMDEGREE 
						FROM PSSCMLIB . PSM_JSA_REFORM 
						WHERE JSEBLASS = P_BLASS 
						AND JSEMLASS = P_MLASS 
						AND JSESLASS = P_SLASS 
						AND JSESEQ = P_SEQ 
						AND JSEITEMSEQ = V_PRITEMSEQ 
						) 
  
						SELECT 
						* 
						FROM MAST 
						WHERE ROWNUM = V_ROWCNT 
						FETCH FIRST 1 ROWS ONLY 
  
					DO 
  
					SET V_PRESUBSEQ = 0 ; 
					SET V_PREREFORMTEXT = '' ; 
  
					SET V_PRESUBSEQ = JSESUBSEQ ; 
					SET V_PREREFORMTEXT = JSEREFORMTEXT ; 
  
					SET V_PREREFORMCNT = JSEREFORMCNT ; 
					SET V_PREREFORMSOLID = JSEREFORMSOLID ; 
					SET V_PREREFORMDEGREE = JSEREFORMDEGREE ; 
  
				END FOR ;  --R21..END 
				IF V_ROWCNT = 1 THEN 
  
				/* 업데이트 */ 
				UPDATE PSSCMLIB . PSM_JSA_PRINT SET 
				PRRSUBSEQ = V_PRRSUBSEQ , 
				PRRISKTEXT = V_PRRISKTEXT , 
				PRESUBSEQ = V_PRESUBSEQ , 
				PREREFORMTEXT = V_PREREFORMTEXT , 
				PRRISKCNT = V_PRRISKCNT , 
				PRRISKSOLID = V_PRRISKSOLID , 
				PRRISKDEGREE = V_PRRISKDEGREE , 
				PREREFORMCNT = V_PREREFORMCNT , 
				PREREFORMSOLID = V_PREREFORMSOLID , 
				PREREFORMDEGREE = V_PREREFORMDEGREE 
				WHERE PRSESSIONID = P_SESSION 
				AND PRROWNUM = V_PRROWNUM 
				AND PRBLASS = P_BLASS 
				AND PRMLASS = P_MLASS 
				AND PRSLASS = P_SLASS 
				AND PRSEQ = P_SEQ 
				AND PRITEMSEQ = V_PRITEMSEQ ; 
  
				ELSE 
  
				/* 생성 */ 
				INSERT INTO PSSCMLIB . PSM_JSA_PRINT 
				( 
				PRSESSIONID , 
				PRROWNUM , 
				PRBLASS , 
				PRMLASS , 
				PRSLASS , 
				PRSEQ , 
				PRITEMSEQ , 
				PRITEMTEXT , 
				PRTOOLTEXT , 
				PRRSUBSEQ , 
				PRRISKTEXT , 
				PRESUBSEQ , 
				PREREFORMTEXT , 
				PRRISKCNT , 
				PRRISKSOLID , 
				PRRISKDEGREE , 
				PREREFORMCNT , 
				PREREFORMSOLID , 
				PREREFORMDEGREE , 
				PRHIGB , 
				PRHIDAT , 
				PRHITIM , 
				PRHISAB 
				) 
				VALUES 
				( 
				P_SESSION , 
				V_PRROWNUM , 
				P_BLASS , 
				P_MLASS , 
				P_SLASS , 
				P_SEQ , 
				V_PRITEMSEQ , 
				V_PRITEMTEXT , 
				V_PRTOOLTEXT , 
				V_PRRSUBSEQ , 
				V_PRRISKTEXT , 
				V_PRESUBSEQ , 
				V_PREREFORMTEXT , 
				V_PRRISKCNT , 
				V_PRRISKSOLID , 
				V_PRRISKDEGREE , 
				V_PREREFORMCNT , 
				V_PREREFORMSOLID , 
				V_PREREFORMDEGREE , 
				'A' , 
				CURRENT_DATE , 
				CURRENT_TIME , 
				V_PRHISAB 
				) ; 
  
				END IF ; 
  
				SET V_ROWCNT = V_ROWCNT + 1 ; 
  
		END WHILE W1 ; 
  
END FOR ;  --R1..END 

  
END P1  ; 
  
