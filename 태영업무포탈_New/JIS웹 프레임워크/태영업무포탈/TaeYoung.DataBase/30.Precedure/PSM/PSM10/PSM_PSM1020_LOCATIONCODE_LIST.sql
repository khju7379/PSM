--  Generate SQL 
--  Version:                   	V6R1M0 080215 
--  Generated on:              	18/10/16 08:29:28 
--  Relational Database:       	S65685C2 
--  Standards Option:          	DB2 i5/OS 

DROP PROCEDURE PSSCMLIB.PSM_PSM1020_LOCATIONCODE_LIST;
  
CREATE PROCEDURE PSSCMLIB.PSM_PSM1020_LOCATIONCODE_LIST ( 
	IN P_CURRENTPAGEINDEX INTEGER , 
	IN P_PAGESIZE INTEGER , 
	IN P_SAUP VARCHAR(1),
	IN P_LCODE VARCHAR(1),
	IN P_MCODE VARCHAR(4),
	IN P_SCODE VARCHAR(3),
	IN P_SNAME VARCHAR(100)) 
	DYNAMIC RESULT SETS 2 
	LANGUAGE SQL 
	SPECIFIC PSSCMLIB.PSM_PSM1020_LOCATIONCODE_LIST 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = *NONE , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN  -- 시작 
	DECLARE P_STNUM INTEGER ; 
	DECLARE P_FNNUM INTEGER ; 
	DECLARE P_SQLSTRING VARCHAR ( 4000 ) ; 
	DECLARE P_SQLTOTALROWCOUNT VARCHAR ( 4000 ) ; 
	DECLARE P_TABLE_QUERY			VARCHAR ( 4000 ) ; 
	DECLARE P_COUNT_QUERY			VARCHAR ( 4000 ) ; 
  
PREV : BEGIN  -- 값 설정 
		SET P_STNUM = ( P_PAGESIZE * ( P_CURRENTPAGEINDEX - 1 ) ) + 1 ; 
        SET P_FNNUM = P_PAGESIZE * P_CURRENTPAGEINDEX ; 
	END PREV ; 
  
MAIN : BEGIN  -- 실행부 
      LIST : BEGIN  -- 리스트 
		DECLARE REFCURSOR CURSOR WITH RETURN FOR  -- 커서생성 
			WITH ORIGINAL_DATA AS (
			SELECT   ROW_NUMBER() OVER(ORDER BY L3SAUP, L3BCODE, L3MCODE, L3SCODE) AS ROWNO,
				 L3SAUP ,   
				 L3BCODE,   
				 L1NAME AS L3BCODENM,
				 DIGITS(L3MCODE) AS L3MCODE,   
				 L2NAME AS L3MCODENM,
				 DIGITS(L3SCODE) AS L3SCODE,
				 L3NAME ,   
				 L3BIGO 
			FROM PSSCMLIB.PSM_LOCATION_CLASS3 
			LEFT OUTER JOIN PSSCMLIB.PSM_LOCATION_CLASS1 
			    ON  L1SAUP = L3SAUP
			   AND  L1CODE = L3BCODE
			LEFT OUTER JOIN PSSCMLIB.PSM_LOCATION_CLASS2 
			    ON  L2SAUP = L3SAUP
			   AND  L2BCODE = L3BCODE
			   AND  L2MCODE = L3MCODE 
			WHERE L3SAUP = P_SAUP
			   AND   (CASE WHEN P_LCODE = '' THEN 1 ELSE L3BCODE END) = (CASE WHEN P_LCODE = '' THEN 1 ELSE P_LCODE END)
			   AND   (CASE WHEN P_MCODE = '' THEN 1 ELSE DIGITS(L3MCODE) END) = (CASE WHEN P_MCODE = '' THEN 1 ELSE P_MCODE END)
			   AND   (CASE WHEN P_SCODE = '' THEN 1 ELSE DIGITS(L3SCODE) END) = (CASE WHEN P_SCODE = '' THEN 1 ELSE P_SCODE END)
			   AND   L3NAME   LIKE  '%' || P_SNAME || '%'
			ORDER BY L3SAUP, L3BCODE, L3MCODE, L3SCODE
			)
			SELECT
			*
			FROM ORIGINAL_DATA
			WHERE ROWNO BETWEEN P_STNUM AND P_FNNUM
			ORDER BY ROWNO ASC ;

		OPEN REFCURSOR ;

	END LIST ;  

	PAGING : BEGIN  -- 페이징 
			DECLARE REFCURSOR2 CURSOR WITH RETURN FOR  -- 커서생성 
				SELECT   COUNT(*) AS TOTALCOUNT
				FROM PSSCMLIB.PSM_LOCATION_CLASS3 
				LEFT OUTER JOIN PSSCMLIB.PSM_LOCATION_CLASS1 
				    ON  L1SAUP = L3SAUP
				   AND  L1CODE = L3BCODE
				LEFT OUTER JOIN PSSCMLIB.PSM_LOCATION_CLASS2 
				    ON  L2SAUP = L3SAUP
				   AND  L2BCODE = L3BCODE
				   AND  L2MCODE = L3MCODE 
				WHERE L3SAUP = P_SAUP
				   AND   (CASE WHEN P_LCODE = '' THEN 1 ELSE L3BCODE END) = (CASE WHEN P_LCODE = '' THEN 1 ELSE P_LCODE END)
				   AND   (CASE WHEN P_MCODE = '' THEN 1 ELSE DIGITS(L3MCODE) END) = (CASE WHEN P_MCODE = '' THEN 1 ELSE P_MCODE END)
				   AND   (CASE WHEN P_SCODE = '' THEN 1 ELSE DIGITS(L3SCODE) END) = (CASE WHEN P_SCODE = '' THEN 1 ELSE P_SCODE END)
				   AND   L3NAME   LIKE  '%' || P_SNAME || '%'  ;
			OPEN REFCURSOR2 ; 
	END PAGING ; 
END MAIN ; 
END  ;
