DROP PROCEDURE PSSCMLIB.PSM_PSM1093_JSA_RISK_ADD;
  
CREATE PROCEDURE PSSCMLIB.PSM_PSM1093_JSA_RISK_ADD ( 
	IN P_JSRBLASS VARCHAR(2) , 
	IN P_JSRMLASS VARCHAR(2) , 
	IN P_JSRSLASS VARCHAR(3) , 
	IN P_JSRSEQ NUMERIC(3,0) , 
	IN P_JSRITEMSEQ NUMERIC(3,0) ,
	IN P_JSRSUBSEQ NUMERIC(3,0),
	IN P_JSRRISKTEXT VARCHAR(400),
	IN P_JSRRISKCNT NUMERIC(1,0),
	IN P_JSRRISKSOLID NUMERIC(1,0),
	IN P_JSRRISKDEGREE NUMERIC(1,0),
	IN P_JSRHISAB VARCHAR(6),
	IN P_GUBUN VARCHAR (1)) 
	LANGUAGE SQL 
	SPECIFIC PSSCMLIB.PSM_PSM1093_JSA_RISK_ADD 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	DECRESULT = (31, 31, 00) , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN 
	 
	IF P_GUBUN = 'A' THEN
  
		INSERT INTO PSSCMLIB.PSM_JSA_RISK
		(
		JSRBLASS,
		JSRMLASS,
		JSRSLASS,
		JSRSEQ,
		JSRITEMSEQ,
		JSRSUBSEQ,
		JSRRISKTEXT,
		JSRRISKCNT,
		JSRRISKSOLID,
		JSRRISKDEGREE,
		JSRHIGB,
		JSRHIDAT,
		JSRHITIM,
		JSRHISAB
		)
		VALUES
		(
		P_JSRBLASS,
		P_JSRMLASS,
		P_JSRSLASS,
		P_JSRSEQ,
		P_JSRITEMSEQ,
		P_JSRSUBSEQ,
		P_JSRRISKTEXT,
		P_JSRRISKCNT,
		P_JSRRISKSOLID,
		P_JSRRISKDEGREE,
		'A',
		CURRENT_DATE,
		CURRENT_TIME,
		P_JSRHISAB
		);
  
	ELSE 
  
		UPDATE PSSCMLIB.PSM_JSA_RISK SET
		JSRRISKTEXT = P_JSRRISKTEXT,
		JSRRISKCNT   = P_JSRRISKCNT,
		JSRRISKSOLID  = P_JSRRISKSOLID,
		JSRRISKDEGREE = P_JSRRISKDEGREE,
		JSRHIGB     = 'C',
		JSRHIDAT    = CURRENT_DATE,
		JSRHITIM    = CURRENT_TIME,
		JSRHISAB    = P_JSRHISAB
		WHERE JSRBLASS   = P_JSRBLASS
		AND   JSRMLASS   = P_JSRMLASS
		AND   JSRSLASS   = P_JSRSLASS
		AND   JSRSEQ     = P_JSRSEQ
		AND   JSRITEMSEQ = P_JSRITEMSEQ
		AND   JSRSUBSEQ  = P_JSRSUBSEQ ;
  
	END IF ; 
  
END P1  ; 
  