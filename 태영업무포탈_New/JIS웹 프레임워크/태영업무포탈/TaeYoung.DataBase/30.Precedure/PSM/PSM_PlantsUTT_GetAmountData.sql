DROP PROCEDURE TYJINFWLIB.PSM_PlantsUTT_GetAmountData;

CREATE PROCEDURE TYJINFWLIB.PSM_PlantsUTT_GetAmountData
( 
	P_YYMM     VARCHAR(6)
)
    RESULT SETS 1
    LANGUAGE SQL
    
P1 : BEGIN -- 시작
    
	DECLARE REFCURSOR CURSOR WITH RETURN FOR	
						
		  WITH DUMMY AS (
					  SELECT   CAST(P_YYMM AS CHAR(6)) AS YYMM
						 FROM SYSIBM.SYSDUMMY1
				), EISPL_TABLE AS (
				   SELECT  VALUE(SUM(EDQPLQUAN),0) EDQPLQUAN
				   FROM TYSCMLIB.EDQUANPLMF
				  LEFT OUTER JOIN DUMMY
					 ON  1 = 1
				   WHERE EDQCDDP = 'S00000'
					AND EDQYEAR = SUBSTR(YYMM,1,4)
				), TABLE1 AS (
				SELECT  SUBSTR(IHJAKENDAT,1,6) AS ERYYMM,  SUM(IHBLQTY) AS MONTHQTY
				  FROM TYFILELIB.USIIPHAF
				 LEFT OUTER JOIN  DUMMY
						   ON 1 = 1
				  WHERE SUBSTR(IHJAKENDAT,1,4)  = SUBSTR(YYMM,1,4)     
					 AND SUBSTR(IHJAKENDAT,1,6)  <= YYMM
				GROUP BY SUBSTR(IHJAKENDAT,1,6)
				)
				, TABLE2 AS (
				SELECT  ERYYMM,
						   VALUE((SELECT  EDQPLQUAN
							 FROM TYSCMLIB.EDQUANPLMF
						   WHERE EDQCDDP = 'S00000'
							 AND EDQYEAR||EDQMONTH = ERYYMM),0) AS PLMONQTY,
							MONTHQTY,
							VALUE(( SELECT  EDUUSQUAN
							   FROM TYSCMLIB.EDQUANUSMF
							WHERE EDUYYMM = ERYYMM
								AND EDUCDDP = 'S00000' ),0) AS EISMONTHQTY
				FROM TABLE1
				), MAIN_TABLE AS (
				SELECT  '월 계' AS GUBN,
							PLMONQTY,
							CASE WHEN EISMONTHQTY <> 0 THEN EISMONTHQTY ELSE MONTHQTY END MONTHQTY
				FROM TABLE2
				 LEFT OUTER JOIN  DUMMY
						   ON 1 = 1  
				WHERE ERYYMM = YYMM
				UNION ALL
				SELECT  '누 계' AS GUBN,
							SUM(PLMONQTY) PLMONQTY,
							SUM(CASE WHEN EISMONTHQTY <> 0 THEN EISMONTHQTY ELSE MONTHQTY END) MONTHQTY
				FROM TABLE2
				 LEFT OUTER JOIN  DUMMY
						   ON 1 = 1  
				WHERE ERYYMM <= YYMM
				UNION ALL
				SELECT  '년 계' AS GUBN,
							VALUE(MAX(EDQPLQUAN),0) PLMONQTY,
							SUM(CASE WHEN EISMONTHQTY <> 0 THEN EISMONTHQTY ELSE MONTHQTY END) MONTHQTY
				FROM TABLE2
				 LEFT OUTER JOIN EISPL_TABLE
						  ON 1 = 1 
				 LEFT OUTER JOIN  DUMMY
						   ON 1 = 1  
				WHERE ERYYMM <= YYMM
				)
				SELECT  GUBN AS AMGUBN,
							PLMONQTY AS AMPLANQTY,
							MONTHQTY AS AMRESULTQTY,
							TYSCMLIB.GET_PERSENT(MONTHQTY, PLMONQTY , 1)  AS AMACHRATE                     
				FROM MAIN_TABLE;
		
	OPEN REFCURSOR;

END