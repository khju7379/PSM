  
DROP PROCEDURE PSSCMLIB.PSM_PSM4041_SAFEORDER_PRT;
  
CREATE PROCEDURE PSSCMLIB.PSM_PSM4041_SAFEORDER_PRT ( 
	IN P_SMWKTEAM VARCHAR(6) , 
	IN P_SMWKDATE VARCHAR(8) , 
	IN P_SMWKSEQ NUMERIC(3, 0),
	IN P_SMWKORAPPDATE VARCHAR(8) , 
	IN P_SMWKORSEQ NUMERIC(3, 0)
	) 
	DYNAMIC RESULT SETS 4
	LANGUAGE SQL 
	
MAIN : BEGIN  -- 시작 
	P1 : BEGIN  -- 마스타 
		DECLARE REFCURSOR CURSOR WITH RETURN FOR 
			 
			SELECT
			SMWKTEAM,
			SMWKDATE,
			SMWKSEQ,
			SMWKORAPPDATE,
			SMWKORSEQ,
			SMREVTEAM,
			CASE WHEN SMREVTEAM = 'E10100' THEN '공무계전 UTT파트' ELSE
			(CASE WHEN SMREVTEAM = 'E10200' THEN '공무계전 SILO파트' ELSE
			TYSCMLIB.SF_GB_ORGNAME(SMREVTEAM, CAST(SMWKORAPPDATE AS VARCHAR(8))) END) END AS SMREVTEAMNM,
			SMWKMETHOD,
			CASE WHEN SMWORKTITLE = '' THEN WOWORKTITLE ELSE SMWORKTITLE END AS SMWORKTITLE,
			--WOWORKTITLE AS SMWORKTITLE,
			SMSUBVEND,
			SMSUBPERSON,
			SMSUBTEL,
			SMRESSABUN,
			SMWKMAN,
			SMTADATE1,
			SUBSTR(SMTATIME1,1,2) AS SMTATIME1_HH,
			SUBSTR(SMTATIME1,3,2) AS SMTATIME1_MM,
			SMTADATE2,
			SUBSTR(SMTATIME2,1,2) AS SMTATIME2_HH,
			SUBSTR(SMTATIME2,3,2) AS SMTATIME2_MM,
			SMOTDATE1,
			SUBSTR(SMOTTIME1,1,2) AS SMOTTIME1_HH,
			SUBSTR(SMOTTIME1,3,2) AS SMOTTIME1_MM,
			SMOTDATE2,
			SUBSTR(SMOTTIME2,1,2) AS SMOTTIME2_HH,
			SUBSTR(SMOTTIME2,3,2) AS SMOTTIME2_MM,
			SMOTAPPSABUN,
			KB5.KBHANGL AS SMOTAPPNAME,
			SMSYSTEMCODE1,
			S2_1.FXC2DESC || ' ' || S3_1.FXC3DESC AS C3NAME,
			SMSYSTEMCODE2,
			SMSYSTEMCODE3,
			SMSYSTEMCODE4,
			SMSYSTEMCODE5,
			SMCONNCODE11,
			SMCONNCODE12,
			SMCONNCODE21,
			SMCONNCODE22,
			SMCONNCODE31,
			SMCONNCODE32,
			SMCONNCODE41,
			SMCONNCODE42,
			SMCONNCODE51,
			SMCONNCODE52,
			SMAREACODE1,
			L1.L3NAME AS SMAREACODE1NM, 
			SMAREACODE2,
			L2.L3NAME AS SMAREACODE2NM,
			SMAREACODE3,
			L3.L3NAME AS SMAREACODE3NM,
			SMAREACODE4,
			L4.L3NAME AS SMAREACODE4NM,
			SMAREACODE5,
			L5.L3NAME AS SMAREACODE5NM,
			SMAREATEXT1,
			SMAREATEXT2,
			SMAREATEXT3,
			SMAREATEXT4,
			SMAREATEXT5,
			SMMATERTEXT1,
			SMMATERTEXT2,
			SMNOTE_BURN,
			SMNOTE_SUFF,
			SMNOTE_ELE,
			SMNOTE_FIR,
			SMNOTE_EXP,
			SMNOTE_DROP,
			SMNOTE_LEAK, 
			SMNOTE_NARR,
			SMNOTE_COLL,
			SMCHKSABUN1,
			KB7.KBHANGL AS SMCHKNAME1,
			CASE WHEN SMCHKSABUN1 <> '' THEN SUBSTR(SMCHKTIME1,1,2) ELSE '' END AS SMCHKTIME1_HH,
			SUBSTR(SMCHKTIME1,3,2) AS SMCHKTIME1_MM,
			CASE WHEN SMCHKSABUN1 <> '' THEN SMCHKOXYGEN1 ELSE '' END AS SMCHKOXYGEN1,
			CASE WHEN SMCHKSABUN1 <> '' THEN SMCHKOXYGENUNIT1 ELSE '' END AS SMCHKOXYGENUNIT1, 
			CASE WHEN SMCHKSABUN1 <> '' THEN
			(CASE WHEN SMCHKTOXGUBN1 = '0' THEN '가연성' ELSE 
			(CASE WHEN SMCHKTOXGUBN1 = '1' THEN '독성' ELSE  
			(CASE WHEN SMCHKTOXGUBN1 = '2' THEN 'CO2' ELSE 
			(CASE WHEN SMCHKTOXGUBN1 = '3' THEN '3CO' ELSE 
			(CASE WHEN SMCHKTOXGUBN1 = '4' THEN 'H2S' ELSE '' END) END) END) END
			) END) ELSE '' END AS SMCHKTOXGUBN1, 
			CASE WHEN SMCHKSABUN1 <> '' THEN SMCHKTOXNUM1 ELSE 0 END AS SMCHKTOXNUM1,
			CASE WHEN SMCHKSABUN1 <> '' THEN SMCHKTOXUNIT1 ELSE '' END AS SMCHKTOXUNIT1,
			CASE WHEN SMCHKSABUN1 <> '' THEN SMCHKTOXNUM1DS ELSE 0 END AS SMCHKTOXNUM1DS,
			CASE WHEN SMCHKSABUN1 <> '' THEN SMCHKTOXUNIT1DS ELSE '' END AS SMCHKTOXUNIT1DS,
			CASE WHEN SMCHKSABUN1 <> '' THEN SMCHKTOXNUM1CO2 ELSE 0 END AS SMCHKTOXNUM1CO2,
			CASE WHEN SMCHKSABUN1 <> '' THEN SMCHKTOXUNIT1CO2 ELSE '' END AS SMCHKTOXUNIT1CO2,
			CASE WHEN SMCHKSABUN1 <> '' THEN SMCHKTOXNUM1CO ELSE 0 END AS SMCHKTOXNUM1CO,
			CASE WHEN SMCHKSABUN1 <> '' THEN SMCHKTOXUNIT1CO ELSE '' END AS SMCHKTOXUNIT1CO,
			CASE WHEN SMCHKSABUN1 <> '' THEN SMCHKTOXNUM1H2S ELSE 0 END AS SMCHKTOXNUM1H2S,
			CASE WHEN SMCHKSABUN1 <> '' THEN SMCHKTOXUNIT1H2S ELSE '' END AS SMCHKTOXUNIT1H2S,
			SMCHKSABUN2,
			KB8.KBHANGL AS SMCHKNAME2,
			CASE WHEN SMCHKSABUN2 <> '' THEN SUBSTR(SMCHKTIME2,1,2) ELSE '' END AS SMCHKTIME2_HH,
			SUBSTR(SMCHKTIME2,3,2) AS SMCHKTIME2_MM,
			CASE WHEN SMCHKSABUN2 <> '' THEN SMCHKOXYGEN2 ELSE '' END AS SMCHKOXYGEN2,
			CASE WHEN SMCHKSABUN2 <> '' THEN SMCHKOXYGENUNIT2 ELSE '' END AS SMCHKOXYGENUNIT2, 
			CASE WHEN SMCHKSABUN2 <> '' THEN
			(CASE WHEN SMCHKTOXGUBN2 = '0' THEN '가연성' ELSE 
			(CASE WHEN SMCHKTOXGUBN2 = '1' THEN '독성' ELSE  
			(CASE WHEN SMCHKTOXGUBN2 = '2' THEN 'CO2' ELSE 
			(CASE WHEN SMCHKTOXGUBN2 = '3' THEN '3CO' ELSE 
			(CASE WHEN SMCHKTOXGUBN2 = '4' THEN 'H2S' ELSE '' END) END) END) END
			) END) ELSE '' END AS SMCHKTOXGUBN2, 
			CASE WHEN SMCHKSABUN2 <> '' THEN SMCHKTOXNUM2 ELSE 0 END AS SMCHKTOXNUM2,
			CASE WHEN SMCHKSABUN2 <> '' THEN SMCHKTOXUNIT2 ELSE '' END AS SMCHKTOXUNIT2,
			CASE WHEN SMCHKSABUN2 <> '' THEN SMCHKTOXNUM2DS ELSE 0 END AS SMCHKTOXNUM2DS,
			CASE WHEN SMCHKSABUN2 <> '' THEN SMCHKTOXUNIT2DS ELSE '' END AS SMCHKTOXUNIT2DS,
			CASE WHEN SMCHKSABUN2 <> '' THEN SMCHKTOXNUM2CO2 ELSE 0 END AS SMCHKTOXNUM2CO2,
			CASE WHEN SMCHKSABUN2 <> '' THEN SMCHKTOXUNIT2CO2 ELSE '' END AS SMCHKTOXUNIT2CO2,
			CASE WHEN SMCHKSABUN2 <> '' THEN SMCHKTOXNUM2CO ELSE 0 END AS SMCHKTOXNUM2CO,
			CASE WHEN SMCHKSABUN2 <> '' THEN SMCHKTOXUNIT2CO ELSE '' END AS SMCHKTOXUNIT2CO,
			CASE WHEN SMCHKSABUN2 <> '' THEN SMCHKTOXNUM2H2S ELSE 0 END AS SMCHKTOXNUM2H2S,
			CASE WHEN SMCHKSABUN2 <> '' THEN SMCHKTOXUNIT2H2S ELSE '' END AS SMCHKTOXUNIT2H2S,
			SMCHKSABUN3,
			KB9.KBHANGL AS SMCHKNAME3,
			CASE WHEN SMCHKSABUN3 <> '' THEN SUBSTR(SMCHKTIME3,1,2) ELSE '' END AS SMCHKTIME3_HH,
			SUBSTR(SMCHKTIME3,3,2) AS SMCHKTIME3_MM,
			CASE WHEN SMCHKSABUN3 <> '' THEN SMCHKOXYGEN3 ELSE '' END AS SMCHKOXYGEN3,
			CASE WHEN SMCHKSABUN3 <> '' THEN SMCHKOXYGENUNIT3 ELSE '' END AS SMCHKOXYGENUNIT3, 
			CASE WHEN SMCHKSABUN3 <> '' THEN
			(CASE WHEN SMCHKTOXGUBN3 = '0' THEN '가연성' ELSE 
			(CASE WHEN SMCHKTOXGUBN3 = '1' THEN '독성' ELSE  
			(CASE WHEN SMCHKTOXGUBN3 = '2' THEN 'CO2' ELSE 
			(CASE WHEN SMCHKTOXGUBN3 = '3' THEN '3CO' ELSE 
			(CASE WHEN SMCHKTOXGUBN3 = '4' THEN 'H2S' ELSE '' END) END) END) END
			) END) ELSE '' END AS SMCHKTOXGUBN3, 
			CASE WHEN SMCHKSABUN3 <> '' THEN SMCHKTOXNUM3 ELSE 0 END AS SMCHKTOXNUM3,
			CASE WHEN SMCHKSABUN3 <> '' THEN SMCHKTOXUNIT3 ELSE '' END AS SMCHKTOXUNIT3,
			CASE WHEN SMCHKSABUN3 <> '' THEN SMCHKTOXNUM3DS ELSE 0 END AS SMCHKTOXNUM3DS,
			CASE WHEN SMCHKSABUN3 <> '' THEN SMCHKTOXUNIT3DS ELSE '' END AS SMCHKTOXUNIT3DS,
			CASE WHEN SMCHKSABUN3 <> '' THEN SMCHKTOXNUM3CO2 ELSE 0 END AS SMCHKTOXNUM3CO2,
			CASE WHEN SMCHKSABUN3 <> '' THEN SMCHKTOXUNIT3CO2 ELSE '' END AS SMCHKTOXUNIT3CO2,
			CASE WHEN SMCHKSABUN3 <> '' THEN SMCHKTOXNUM3CO ELSE 0 END AS SMCHKTOXNUM3CO,
			CASE WHEN SMCHKSABUN3 <> '' THEN SMCHKTOXUNIT3CO ELSE '' END AS SMCHKTOXUNIT3CO,
			CASE WHEN SMCHKSABUN3 <> '' THEN SMCHKTOXNUM3H2S ELSE 0 END AS SMCHKTOXNUM3H2S,
			CASE WHEN SMCHKSABUN3 <> '' THEN SMCHKTOXUNIT3H2S ELSE '' END AS SMCHKTOXUNIT3H2S,
			SMCHKSABUN4,
			KB10.KBHANGL AS SMCHKNAME4,
			CASE WHEN SMCHKSABUN4 <> '' THEN SUBSTR(SMCHKTIME4,1,2) ELSE '' END AS SMCHKTIME4_HH,
			SUBSTR(SMCHKTIME4,3,2) AS SMCHKTIME4_MM,
			CASE WHEN SMCHKSABUN4 <> '' THEN SMCHKOXYGEN4 ELSE '' END AS SMCHKOXYGEN4,
			CASE WHEN SMCHKSABUN4 <> '' THEN SMCHKOXYGENUNIT4 ELSE '' END AS SMCHKOXYGENUNIT4, 
			CASE WHEN SMCHKSABUN4 <> '' THEN
			(CASE WHEN SMCHKTOXGUBN4 = '0' THEN '가연성' ELSE 
			(CASE WHEN SMCHKTOXGUBN4 = '1' THEN '독성' ELSE  
			(CASE WHEN SMCHKTOXGUBN4 = '2' THEN 'CO2' ELSE 
			(CASE WHEN SMCHKTOXGUBN4 = '3' THEN '3CO' ELSE 
			(CASE WHEN SMCHKTOXGUBN4 = '4' THEN 'H2S' ELSE '' END) END) END) END
			) END)ELSE '' END AS SMCHKTOXGUBN4, 
			CASE WHEN SMCHKSABUN4 <> '' THEN SMCHKTOXNUM4 ELSE 0 END AS SMCHKTOXNUM4,
			CASE WHEN SMCHKSABUN4 <> '' THEN SMCHKTOXUNIT4 ELSE '' END AS SMCHKTOXUNIT4,
			CASE WHEN SMCHKSABUN4 <> '' THEN SMCHKTOXNUM4DS ELSE 0 END AS SMCHKTOXNUM4DS,
			CASE WHEN SMCHKSABUN4 <> '' THEN SMCHKTOXUNIT4DS ELSE '' END AS SMCHKTOXUNIT4DS,
			CASE WHEN SMCHKSABUN4 <> '' THEN SMCHKTOXNUM4CO2 ELSE 0 END AS SMCHKTOXNUM4CO2,
			CASE WHEN SMCHKSABUN4 <> '' THEN SMCHKTOXUNIT4CO2 ELSE '' END AS SMCHKTOXUNIT4CO2,
			CASE WHEN SMCHKSABUN4 <> '' THEN SMCHKTOXNUM4CO ELSE 0 END AS SMCHKTOXNUM4CO,
			CASE WHEN SMCHKSABUN4 <> '' THEN SMCHKTOXUNIT4CO ELSE '' END AS SMCHKTOXUNIT4CO,
			CASE WHEN SMCHKSABUN4 <> '' THEN SMCHKTOXNUM4H2S ELSE 0 END AS SMCHKTOXNUM4H2S,
			CASE WHEN SMCHKSABUN4 <> '' THEN SMCHKTOXUNIT4H2S ELSE '' END AS SMCHKTOXUNIT4H2S,
			SMCHKSABUN5,
			KB11.KBHANGL AS SMCHKNAME5,
			CASE WHEN SMCHKSABUN5 <> '' THEN SUBSTR(SMCHKTIME5,1,2) ELSE '' END AS SMCHKTIME5_HH,
			SUBSTR(SMCHKTIME5,3,2) AS SMCHKTIME5_MM,
			CASE WHEN SMCHKSABUN5 <> '' THEN SMCHKOXYGEN5 ELSE '' END AS SMCHKOXYGEN5,
			CASE WHEN SMCHKSABUN5 <> '' THEN SMCHKOXYGENUNIT5 ELSE '' END AS SMCHKOXYGENUNIT5, 
			CASE WHEN SMCHKSABUN5 <> '' THEN
			(CASE WHEN SMCHKTOXGUBN5 = '0' THEN '가연성' ELSE 
			(CASE WHEN SMCHKTOXGUBN5 = '1' THEN '독성' ELSE  
			(CASE WHEN SMCHKTOXGUBN5 = '2' THEN 'CO2' ELSE 
			(CASE WHEN SMCHKTOXGUBN5 = '3' THEN '3CO' ELSE 
			(CASE WHEN SMCHKTOXGUBN5 = '4' THEN 'H2S' ELSE '' END) END) END) END
			) END) ELSE '' END AS SMCHKTOXGUBN5, 
			CASE WHEN SMCHKSABUN5 <> '' THEN SMCHKTOXNUM5 ELSE 0 END AS SMCHKTOXNUM5,
			CASE WHEN SMCHKSABUN5 <> '' THEN SMCHKTOXUNIT5 ELSE '' END AS SMCHKTOXUNIT5,
			CASE WHEN SMCHKSABUN5 <> '' THEN SMCHKTOXNUM5DS ELSE 0 END AS SMCHKTOXNUM5DS,
			CASE WHEN SMCHKSABUN5 <> '' THEN SMCHKTOXUNIT5DS ELSE '' END AS SMCHKTOXUNIT5DS,
			CASE WHEN SMCHKSABUN5 <> '' THEN SMCHKTOXNUM5CO2 ELSE 0 END AS SMCHKTOXNUM5CO2,
			CASE WHEN SMCHKSABUN5 <> '' THEN SMCHKTOXUNIT5CO2 ELSE '' END AS SMCHKTOXUNIT5CO2,
			CASE WHEN SMCHKSABUN5 <> '' THEN SMCHKTOXNUM5CO ELSE 0 END AS SMCHKTOXNUM5CO,
			CASE WHEN SMCHKSABUN5 <> '' THEN SMCHKTOXUNIT5CO ELSE '' END AS SMCHKTOXUNIT5CO,
			CASE WHEN SMCHKSABUN5 <> '' THEN SMCHKTOXNUM5H2S ELSE 0 END AS SMCHKTOXNUM5H2S,
			CASE WHEN SMCHKSABUN5 <> '' THEN SMCHKTOXUNIT5H2S ELSE '' END AS SMCHKTOXUNIT5H2S,
			SMCHKSABUN6,
			KB12.KBHANGL AS SMCHKNAME6,
			CASE WHEN SMCHKSABUN6 <> '' THEN SUBSTR(SMCHKTIME6,1,2) ELSE '' END AS SMCHKTIME6_HH,
			SUBSTR(SMCHKTIME6,3,2) AS SMCHKTIME6_MM,
			CASE WHEN SMCHKSABUN6 <> '' THEN SMCHKOXYGEN6 ELSE '' END AS SMCHKOXYGEN6,
			CASE WHEN SMCHKSABUN6 <> '' THEN SMCHKOXYGENUNIT6 ELSE '' END AS SMCHKOXYGENUNIT6, 
			CASE WHEN SMCHKSABUN6 <> '' THEN
			(CASE WHEN SMCHKTOXGUBN6 = '0' THEN '가연성' ELSE 
			(CASE WHEN SMCHKTOXGUBN6 = '1' THEN '독성' ELSE  
			(CASE WHEN SMCHKTOXGUBN6 = '2' THEN 'CO2' ELSE 
			(CASE WHEN SMCHKTOXGUBN6 = '3' THEN '3CO' ELSE 
			(CASE WHEN SMCHKTOXGUBN6 = '4' THEN 'H2S' ELSE '' END) END) END) END
			) END)ELSE '' END AS SMCHKTOXGUBN6, 
			CASE WHEN SMCHKSABUN6 <> '' THEN SMCHKTOXNUM6 ELSE 0 END AS SMCHKTOXNUM6,
			CASE WHEN SMCHKSABUN6 <> '' THEN SMCHKTOXUNIT6 ELSE '' END AS SMCHKTOXUNIT6,
			CASE WHEN SMCHKSABUN6 <> '' THEN SMCHKTOXNUM6DS ELSE 0 END AS SMCHKTOXNUM6DS,
			CASE WHEN SMCHKSABUN6 <> '' THEN SMCHKTOXUNIT6DS ELSE '' END AS SMCHKTOXUNIT6DS,
			CASE WHEN SMCHKSABUN6 <> '' THEN SMCHKTOXNUM6CO2 ELSE 0 END AS SMCHKTOXNUM6CO2,
			CASE WHEN SMCHKSABUN6 <> '' THEN SMCHKTOXUNIT6CO2 ELSE '' END AS SMCHKTOXUNIT6CO2,
			CASE WHEN SMCHKSABUN6 <> '' THEN SMCHKTOXNUM6CO ELSE 0 END AS SMCHKTOXNUM6CO,
			CASE WHEN SMCHKSABUN6 <> '' THEN SMCHKTOXUNIT6CO ELSE '' END AS SMCHKTOXUNIT6CO,
			CASE WHEN SMCHKSABUN6 <> '' THEN SMCHKTOXNUM6H2S ELSE 0 END AS SMCHKTOXNUM6H2S,
			CASE WHEN SMCHKSABUN6 <> '' THEN SMCHKTOXUNIT6H2S ELSE '' END AS SMCHKTOXUNIT6H2S,
			SMCHKSABUN7,
			KB14.KBHANGL AS SMCHKNAME7,
			CASE WHEN SMCHKSABUN7 <> '' THEN SUBSTR(SMCHKTIME7,1,2) ELSE '' END AS SMCHKTIME7_HH,
			SUBSTR(SMCHKTIME7,3,2) AS SMCHKTIME7_MM,
			CASE WHEN SMCHKSABUN7 <> '' THEN SMCHKOXYGEN7 ELSE '' END AS SMCHKOXYGEN7,
			CASE WHEN SMCHKSABUN7 <> '' THEN SMCHKOXYGENUNIT7 ELSE '' END AS SMCHKOXYGENUNIT7, 
			CASE WHEN SMCHKSABUN7 <> '' THEN SMCHKTOXNUM7 ELSE 0 END AS SMCHKTOXNUM7,
			CASE WHEN SMCHKSABUN7 <> '' THEN SMCHKTOXUNIT7 ELSE '' END AS SMCHKTOXUNIT7,
			CASE WHEN SMCHKSABUN7 <> '' THEN SMCHKTOXNUM7DS ELSE 0 END AS SMCHKTOXNUM7DS,
			CASE WHEN SMCHKSABUN7 <> '' THEN SMCHKTOXUNIT7DS ELSE '' END AS SMCHKTOXUNIT7DS,
			CASE WHEN SMCHKSABUN7 <> '' THEN SMCHKTOXNUM7CO2 ELSE 0 END AS SMCHKTOXNUM7CO2,
			CASE WHEN SMCHKSABUN7 <> '' THEN SMCHKTOXUNIT7CO2 ELSE '' END AS SMCHKTOXUNIT7CO2,
			CASE WHEN SMCHKSABUN7 <> '' THEN SMCHKTOXNUM7CO ELSE 0 END AS SMCHKTOXNUM7CO,
			CASE WHEN SMCHKSABUN7 <> '' THEN SMCHKTOXUNIT7CO ELSE '' END AS SMCHKTOXUNIT7CO,
			CASE WHEN SMCHKSABUN7 <> '' THEN SMCHKTOXNUM7H2S ELSE 0 END AS SMCHKTOXNUM7H2S,
			CASE WHEN SMCHKSABUN7 <> '' THEN SMCHKTOXUNIT7H2S ELSE '' END AS SMCHKTOXUNIT7H2S,
			SMCHKSABUN8,
			KB15.KBHANGL AS SMCHKNAME8,
			CASE WHEN SMCHKSABUN8 <> '' THEN SUBSTR(SMCHKTIME8,1,2) ELSE '' END AS SMCHKTIME8_HH,
			SUBSTR(SMCHKTIME8,3,2) AS SMCHKTIME8_MM,
			CASE WHEN SMCHKSABUN8 <> '' THEN SMCHKOXYGEN8 ELSE '' END AS SMCHKOXYGEN8,
			CASE WHEN SMCHKSABUN8 <> '' THEN SMCHKOXYGENUNIT8 ELSE '' END AS SMCHKOXYGENUNIT8, 
			CASE WHEN SMCHKSABUN8 <> '' THEN SMCHKTOXNUM8 ELSE 0 END AS SMCHKTOXNUM8,
			CASE WHEN SMCHKSABUN8 <> '' THEN SMCHKTOXUNIT8 ELSE '' END AS SMCHKTOXUNIT8,
			CASE WHEN SMCHKSABUN8 <> '' THEN SMCHKTOXNUM8DS ELSE 0 END AS SMCHKTOXNUM8DS,
			CASE WHEN SMCHKSABUN8 <> '' THEN SMCHKTOXUNIT8DS ELSE '' END AS SMCHKTOXUNIT8DS,
			CASE WHEN SMCHKSABUN8 <> '' THEN SMCHKTOXNUM8CO2 ELSE 0 END AS SMCHKTOXNUM8CO2,
			CASE WHEN SMCHKSABUN8 <> '' THEN SMCHKTOXUNIT8CO2 ELSE '' END AS SMCHKTOXUNIT8CO2,
			CASE WHEN SMCHKSABUN8 <> '' THEN SMCHKTOXNUM8CO ELSE 0 END AS SMCHKTOXNUM8CO,
			CASE WHEN SMCHKSABUN8 <> '' THEN SMCHKTOXUNIT8CO ELSE '' END AS SMCHKTOXUNIT8CO,
			CASE WHEN SMCHKSABUN8 <> '' THEN SMCHKTOXNUM8H2S ELSE 0 END AS SMCHKTOXNUM8H2S,
			CASE WHEN SMCHKSABUN8 <> '' THEN SMCHKTOXUNIT8H2S ELSE '' END AS SMCHKTOXUNIT8H2S,
			SMORDERTEXT1,
			SMORDERTEXT2,
			SMORSABUN,
			KB1.KBHANGL AS SMORNAME,
			SMORAPPDATE,
			SMORAPPTIME,
			SMGRSABUN,
			KB2.KBHANGL AS SMGRNAME,
			SMGRAPPDATE,
			SMGRAPPTIME,
			SMCOSABUN,
			KB3.KBHANGL AS SMCONAME,
			SMCOAPPDATE,
			SMCOAPPTIME,
			SMSMSABUN,
			KB4.KBHANGL AS SMSMNAME,
			SMSMAPPDATE,
			SMSMAPPTIME,
			SMFSSABUN,
			KB6.KBHANGL AS SMFSNAME,
			SMFSDATE,
			SMFSTIME,
			SMOPSABUN,
			SMOPNAME,
			SMOPJKCD,
			SMOPJKCDNM,
			SMOPAPPDATE,
			SMOPAPPTIME,
			SMOPCOMMENT,
			KB13.KBHANGL AS SMOPHANGL,
			SMFIREINS,
			SOIMG1 . FILE_NAME AS SOIMGNAME1 , 
			SOIMG1 . FILE_SIZE AS SOIMGSIZE1 , 
			SOIMG1 . ATTACH_BYTE AS SOIMGSIGN1 , 
			SOIMG2 . FILE_NAME AS SOIMGNAME2 , 
			SOIMG2 . FILE_SIZE AS SOIMGSIZE2 , 
			SOIMG2 . ATTACH_BYTE AS SOIMGSIGN2 , 
			SOIMG3 . FILE_NAME AS SOIMGNAME3 , 
			SOIMG3 . FILE_SIZE AS SOIMGSIZE3 , 
			SOIMG3 . ATTACH_BYTE AS SOIMGSIGN3 , 
			SOIMG4 . FILE_NAME AS SOIMGNAME4 , 
			SOIMG4 . FILE_SIZE AS SOIMGSIZE4 , 
			SOIMG4 . ATTACH_BYTE AS SOIMGSIGN4 , 
			SOIMG5 . FILE_NAME AS SOIMGNAME5 , 
			SOIMG5 . FILE_SIZE AS SOIMGSIZE5 , 
			SOIMG5 . ATTACH_BYTE AS SOIMGSIGN5 ,
			SOIMG6 . FILE_NAME AS SOIMGNAME6 , 
			SOIMG6 . FILE_SIZE AS SOIMGSIZE6 , 
			SOIMG6 . ATTACH_BYTE AS SOIMGSIGN6 
			FROM PSSCMLIB.PSM_SAFEORDER_MASTER
			LEFT OUTER JOIN PSSCMLIB.PSM_WorkOrder
			    ON WOORTEAM = SMWKTEAM
			   AND WOORDATE = SMWKDATE
			   AND WOSEQ    = SMWKSEQ
			LEFT OUTER JOIN PSSCMLIB.PSM_LOCATION_CLASS3 L1
			      ON L1.L3SAUP||L1.L3BCODE||DIGITS(L1.L3MCODE)||DIGITS(L1.L3SCODE) = SMAREACODE1
			LEFT OUTER JOIN PSSCMLIB.PSM_LOCATION_CLASS3 L2
			      ON L2.L3SAUP||L2.L3BCODE||DIGITS(L2.L3MCODE)||DIGITS(L2.L3SCODE) = SMAREACODE2 
			LEFT OUTER JOIN PSSCMLIB.PSM_LOCATION_CLASS3 L3
			      ON L3.L3SAUP||L3.L3BCODE||DIGITS(L3.L3MCODE)||DIGITS(L3.L3SCODE) = SMAREACODE3
			LEFT OUTER JOIN PSSCMLIB.PSM_LOCATION_CLASS3 L4
			      ON L4.L3SAUP||L4.L3BCODE||DIGITS(L4.L3MCODE)||DIGITS(L4.L3SCODE) = SMAREACODE4
			LEFT OUTER JOIN PSSCMLIB.PSM_LOCATION_CLASS3 L5
			      ON L5.L3SAUP||L5.L3BCODE||DIGITS(L5.L3MCODE)||DIGITS(L5.L3SCODE) = SMAREACODE5
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB1
			      ON KB1.KBSABUN = SMORSABUN
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB2
			      ON KB2.KBSABUN = SMGRSABUN
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB3
			      ON KB3.KBSABUN = SMCOSABUN
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB4
			      ON KB4.KBSABUN = SMSMSABUN
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB5
			      ON KB5.KBSABUN = SMOTAPPSABUN
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB6
			      ON KB6.KBSABUN = SMFSSABUN
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB7
			      ON KB7.KBSABUN = SMCHKSABUN1
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB8
			      ON KB8.KBSABUN = SMCHKSABUN2
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB9
			      ON KB9.KBSABUN = SMCHKSABUN3
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB10
			      ON KB10.KBSABUN = SMCHKSABUN4
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB11
			      ON KB11.KBSABUN = SMCHKSABUN5
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB12
			      ON KB12.KBSABUN = SMCHKSABUN6
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB13
			      ON KB13.KBSABUN = SMOPSABUN
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB14
			      ON KB14.KBSABUN = SMCHKSABUN7
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF KB15
			      ON KB15.KBSABUN = SMCHKSABUN8
			LEFT OUTER JOIN TYSCMLIB.ACFIXCLASS3 AS S3_1
			      ON S3_1.FXC3SAUP||S3_1.FXC3BCODE||DIGITS(S3_1.FXC3MCODE)||DIGITS(S3_1.FXC3SCODE) = SMSYSTEMCODE1
			LEFT OUTER JOIN TYSCMLIB.ACFIXCLASS2 AS S2_1
			      ON S2_1.FXC2SAUP||S2_1.FXC2BCODE||DIGITS(S2_1.FXC2MCODE) = SUBSTR(SMSYSTEMCODE1,1,7) 
			LEFT OUTER JOIN TYSCMLIB.ACFIXCLASS3 AS S3_2
			      ON S3_2.FXC3SAUP||S3_2.FXC3BCODE||DIGITS(S3_2.FXC3MCODE)||DIGITS(S3_2.FXC3SCODE) = SMSYSTEMCODE2
			LEFT OUTER JOIN TYSCMLIB.ACFIXCLASS2 AS S2_2
			      ON S2_2.FXC2SAUP||S2_2.FXC2BCODE||DIGITS(S2_2.FXC2MCODE) = SUBSTR(SMSYSTEMCODE2,1,7)
			LEFT OUTER JOIN TYSCMLIB.ACFIXCLASS3 AS S3_3
			      ON S3_3.FXC3SAUP||S3_3.FXC3BCODE||DIGITS(S3_3.FXC3MCODE)||DIGITS(S3_1.FXC3SCODE) = SMSYSTEMCODE3
			LEFT OUTER JOIN TYSCMLIB.ACFIXCLASS2 AS S2_3
			      ON S2_3.FXC2SAUP||S2_3.FXC2BCODE||DIGITS(S2_3.FXC2MCODE) = SUBSTR(SMSYSTEMCODE3,1,7) 
			LEFT OUTER JOIN TYSCMLIB.ACFIXCLASS3 AS S3_4
			      ON S3_4.FXC3SAUP||S3_4.FXC3BCODE||DIGITS(S3_4.FXC3MCODE)||DIGITS(S3_4.FXC3SCODE) = SMSYSTEMCODE4
			LEFT OUTER JOIN TYSCMLIB.ACFIXCLASS2 AS S2_4
			      ON S2_4.FXC2SAUP||S2_4.FXC2BCODE||DIGITS(S2_4.FXC2MCODE) = SUBSTR(SMSYSTEMCODE4,1,7) 
			LEFT OUTER JOIN TYSCMLIB.ACFIXCLASS3 AS S3_5
			      ON S3_5.FXC3SAUP||S3_5.FXC3BCODE||DIGITS(S3_5.FXC3MCODE)||DIGITS(S3_5.FXC3SCODE) = SMSYSTEMCODE5
			LEFT OUTER JOIN TYSCMLIB.ACFIXCLASS2 AS S2_5
			      ON S2_5.FXC2SAUP||S2_5.FXC2BCODE||DIGITS(S2_5.FXC2MCODE) = SUBSTR(SMSYSTEMCODE5,1,7)
			LEFT OUTER JOIN PSSCMLIB.PSM_CMN_ATTACH AS SOIMG1
			ON    SOIMG1.ATTACH_TYPE = 'SG'
			AND   SOIMG1.ATTACH_NO   = SMORSABUN
			LEFT OUTER JOIN PSSCMLIB.PSM_CMN_ATTACH AS SOIMG2
			ON    SOIMG2.ATTACH_TYPE = 'SG'
			AND   SOIMG2.ATTACH_NO   = SMGRSABUN
			LEFT OUTER JOIN PSSCMLIB.PSM_CMN_ATTACH AS SOIMG3
			ON    SOIMG3.ATTACH_TYPE = 'SG'
			AND   SOIMG3.ATTACH_NO   = SMCOSABUN
			LEFT OUTER JOIN PSSCMLIB.PSM_CMN_ATTACH AS SOIMG4
			ON    SOIMG4.ATTACH_TYPE = 'SG'
			AND   SOIMG4.ATTACH_NO   = SMSMSABUN
			LEFT OUTER JOIN PSSCMLIB.PSM_CMN_ATTACH AS SOIMG5
			ON    SOIMG5.ATTACH_TYPE = 'SG'
			AND   SOIMG5.ATTACH_NO   = SMOPSABUN
			LEFT OUTER JOIN PSSCMLIB.PSM_CMN_ATTACH AS SOIMG6
			ON    SOIMG6.ATTACH_TYPE = 'SG'
			AND   SOIMG6.ATTACH_NO   = SMFSSABUN
			WHERE SMWKTEAM      = P_SMWKTEAM
			AND   SMWKDATE      = P_SMWKDATE
			AND   SMWKSEQ       = P_SMWKSEQ
			AND   SMWKORAPPDATE = P_SMWKORAPPDATE
			AND   SMWKORSEQ     = P_SMWKORSEQ ; 
  
		OPEN REFCURSOR ; 
	END P1 ; 

	P2 : BEGIN  -- 작업내용(WK) 
		DECLARE REFCURSOR2 CURSOR WITH RETURN FOR 
			 
			WITH MAST AS
			(
			SELECT
			CDCODE AS SWWKCODE,
			CDDESC1 AS SWWKNAME,
			SWCHECKGN
			FROM PSSCMLIB.PSM_CODEMF
			LEFT OUTER JOIN PSSCMLIB.PSM_SAFEORDER_WKCODE
			ON     SWWKCODE    = CDCODE
			AND    SWWKTEAM    = P_SMWKTEAM
			AND    SWWKDATE    = P_SMWKDATE
			AND    SWWKSEQ     = P_SMWKSEQ
			AND    SWORAPPDATE = P_SMWKORAPPDATE
			AND    SWORSEQ     = P_SMWKORSEQ
			WHERE CDINDEX = 'WK'
			)

			SELECT
			SWWKCODE,
			SWWKNAME,
			(CASE WHEN SWCHECKGN IS NULL THEN 'N' ELSE SWCHECKGN END) AS SWCHECKGN
			FROM MAST ; 
  
		OPEN REFCURSOR2 ; 
	END P2 ; 

	P3 : BEGIN  -- 조치요구사항
		DECLARE REFCURSOR3 CURSOR WITH RETURN FOR 
			 
			SELECT
			SSSACODE AS CODE,
			SSCODENAME AS NAME,
			(CASE WHEN SSPUBSEL IS NULL THEN 'N' ELSE SSPUBSEL END) AS SSPUBSEL,
			(CASE WHEN SSREVSEL IS NULL THEN 'N' ELSE SSREVSEL END) AS SSREVSEL,
			(CASE WHEN SSFIXSEL IS NULL THEN 'N' ELSE SSFIXSEL END) AS SSFIXSEL
			FROM PSSCMLIB.PSM_SAFEORDER_SACODE
			WHERE   SSWKTEAM    = P_SMWKTEAM
			AND      SSWKDATE    = P_SMWKDATE
			AND      SSWKSEQ     = P_SMWKSEQ
			AND      SSORAPPDATE = P_SMWKORAPPDATE
			AND      SSORSEQ     = P_SMWKORSEQ
			ORDER BY SSSACODE ; 
  
		OPEN REFCURSOR3 ; 
	END P3 ; 

	P4 : BEGIN  -- 굴착 조치요구사항
		DECLARE REFCURSOR4 CURSOR WITH RETURN FOR 
			 
			SELECT
			DRCODE,
			DRCODENAME,
			DRYESSEL,
			DRNOSEL,
			DRNASEL,
			DRSORT,
			DRSTAND,
			DRDEPTH,
			DRSABUN,
			KBHANGL
			FROM PSSCMLIB.PSM_SAFEORDER_DRCODE
			LEFT OUTER JOIN TYSCMLIB.INKIBNMF AS KIBN
			ON              DRSABUN = KBSABUN
			WHERE  DRWKTEAM    = P_SMWKTEAM
			AND    DRWKDATE    = P_SMWKDATE
			AND    DRWKSEQ     = P_SMWKSEQ
			AND    DRORAPPDATE = P_SMWKORAPPDATE
			AND    DRORSEQ     = P_SMWKORSEQ
			ORDER BY DRCODE
			; 
  
		OPEN REFCURSOR4 ; 
	END P4 ; 
END;