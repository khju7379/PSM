DROP PROCEDURE TYJINFWLIB.SP_TGCSI_CSG1020_LIST;
--  Generate SQL 
--  Version:                   	V7R4M0 190621 
--  Generated on:              	23-03-13 19:09:52 
--  Relational Database:       	S78E0180 
--  Standards Option:          	Db2 for i 
SET PATH "QSYS","QSYS2","SYSPROC","SYSIBMADM","KSGPDM" ; 
  
CREATE PROCEDURE TYJINFWLIB.SP_TGCSI_CSG1020_LIST ( 
	IN P_CURRENTPAGEINDEX INTEGER , 
	IN P_PAGESIZE INTEGER , 
	IN P_SDATE VARCHAR(8) , 
	IN P_EDATE VARCHAR(8) , 
	IN P_HWAJU VARCHAR(50) ) 
	DYNAMIC RESULT SETS 2 
	LANGUAGE SQL 
	SPECIFIC TYJINFWLIB.SP_TGCSI_CSG1020_LIST 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	DECRESULT = (31, 31, 00) , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN  -- 시작 
	DECLARE P_STNUM INTEGER ; 
	DECLARE P_FNNUM INTEGER ; 
	DECLARE P_SQLSTRING VARCHAR ( 4000 ) ; 
	DECLARE P_SQLTOTALROWCOUNT VARCHAR ( 4000 ) ; 
	DECLARE P_TABLE_QUERY			VARCHAR ( 5000 ) ; 
	DECLARE P_COUNT_QUERY			VARCHAR ( 5000 ) ; 
  
	PREV : BEGIN  -- 값 설정 
		SET P_STNUM = ( P_PAGESIZE * ( P_CURRENTPAGEINDEX - 1 ) ) + 1 ; 
	SET P_FNNUM = P_PAGESIZE * P_CURRENTPAGEINDEX ; 
	END PREV ; 
  
	MAIN : BEGIN  -- 실행부      
	LIST : BEGIN  -- 리스트 
			DECLARE REFCURSOR CURSOR WITH RETURN FOR 
  
				WITH ORIGINAL_DATA AS 
				( 
					SELECT 
					ROW_NUMBER ( ) OVER ( ORDER BY COMPANY , IHHANGCHA , IPGOKJONG ) AS ROWNO , 
					COMPANY , 
					IHHANGCHA , 
					VSDESC1 , 
					IPGOKJONG , 
					GKDESC1 , 
					SKDESC1 , 
					WNDESC1 , 
					IHIPHANG , 
					IHJAKENDAT , 
					IPIPSTDAT , 
					IHJUKHANO , 
					JBBEJNQTY , 
					JBHWAKQTY , 
					GAMQTY 
					FROM 
					( 
						SELECT 
						DISTINCT 
						'그레인' AS COMPANY , 
						IPHA . IHHANGCHA , 
						VSCODE . CDDESC1 AS VSDESC1 , 
						IPGO . IPGOKJONG , 
						GKCODE . CDDESC1 AS GKDESC1 , 
						SKCODE . CDDESC1 AS SKDESC1 , 
						WNCODE . CDDESC1 AS WNDESC1 , 
						IHIPHANG , 
						IHJAKENDAT , 
						IPIPSTDAT , 
						IHJUKHANO , 
						( JBBEJNQTY + JBBEIPQTY - JBBECHQTY ) AS JBBEJNQTY , 
						( JBHWAKQTY + JBHWIPQTY - JBHWCHQTY ) AS JBHWAKQTY , 
						( ( JBBEJNQTY + JBBEIPQTY - JBBECHQTY ) - ( JBHWAKQTY + JBHWIPQTY - JBHWCHQTY ) ) AS GAMQTY 
						FROM TGSCMLIB . USIIPHAF AS IPHA 
						LEFT OUTER JOIN TGSCMLIB . USIIPGOF AS IPGO 
						ON IPHA . IHHANGCHA = IPGO . IPHANGCHA 
						LEFT OUTER JOIN TGSCMLIB . USIJEBLF AS JEBL 
						ON IPGO . IPHANGCHA = JEBL . JBHANGCHA 
						AND IPGO . IPGOKJONG = JEBL . JBGOKJONG 
						LEFT OUTER JOIN TGSCMLIB . USICODEF AS VSCODE 
						ON 'VS' = VSCODE . CDINDEX 
						AND IPHA . IHHANGCHA = VSCODE . CDCODE 
						LEFT OUTER JOIN TGSCMLIB . USICODEF AS GKCODE 
						ON 'GK' = GKCODE . CDINDEX 
						AND IPGO . IPGOKJONG = GKCODE . CDCODE 
						LEFT OUTER JOIN TGSCMLIB . USICODEF AS SKCODE 
						ON 'SK' = SKCODE . CDINDEX 
						AND IPHA . IHSOSOK = SKCODE . CDCODE 
						LEFT OUTER JOIN TGSCMLIB . USICODEF AS WNCODE 
						ON 'WN' = WNCODE . CDINDEX 
						AND IPHA . IHWONSAN1 = WNCODE . CDCODE 
						WHERE SUBSTR ( CHAR ( IPHA . IHIPHANG ) , 1 , 6 ) BETWEEN P_SDATE AND P_EDATE 
						AND JEBL . JBHWAJU IN ( SELECT * FROM TABLE ( PTSCMLIB . SF_GB_REVCOLROW ( CAST ( P_HWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
						AND ( JEBL . JBBEJNQTY + JEBL . JBBEIPQTY - JEBL . JBBECHQTY ) <> 0 
						AND ( JEBL . JBHWAKQTY + JEBL . JBHWIPQTY - JEBL . JBHWCHQTY ) <> 0 
  
						UNION ALL 
  
						SELECT 
						DISTINCT 
						'평택' AS COMPANY , 
						IPHA . IHHANGCHA , 
						VSCODE . CDDESC1 AS VSDESC1 , 
						IPGO . IPGOKJONG , 
						GKCODE . CDDESC1 AS GKDESC1 , 
						SKCODE . CDDESC1 AS SKDESC1 , 
						WNCODE . CDDESC1 AS WNDESC1 , 
						IHIPHANG , 
						IHJAKENDAT , 
						IPIPSTDAT , 
						IHJUKHANO , 
						( JBBEJNQTY + JBBEIPQTY - JBBECHQTY ) AS JBBEJNQTY , 
						( JBHWAKQTY + JBHWIPQTY - JBHWCHQTY ) AS JBHWAKQTY , 
						( ( JBBEJNQTY + JBBEIPQTY - JBBECHQTY ) - ( JBHWAKQTY + JBHWIPQTY - JBHWCHQTY ) ) AS GAMQTY 
						FROM PTSCMLIB . USIIPHAF AS IPHA 
						LEFT OUTER JOIN PTSCMLIB . USIIPGOF AS IPGO 
						ON IPHA . IHHANGCHA = IPGO . IPHANGCHA 
						LEFT OUTER JOIN PTSCMLIB . USIJEBLF AS JEBL 
						ON IPGO . IPHANGCHA = JEBL . JBHANGCHA 
						AND IPGO . IPGOKJONG = JEBL . JBGOKJONG 
						LEFT OUTER JOIN TGSCMLIB . USICODEF AS VSCODE 
						ON 'VP' = VSCODE . CDINDEX 
						AND IPHA . IHHANGCHA = VSCODE . CDCODE 
						LEFT OUTER JOIN TGSCMLIB . USICODEF AS GKCODE 
						ON 'GK' = GKCODE . CDINDEX 
						AND IPGO . IPGOKJONG = GKCODE . CDCODE 
						LEFT OUTER JOIN TGSCMLIB . USICODEF AS SKCODE 
						ON 'SK' = SKCODE . CDINDEX 
						AND IPHA . IHSOSOK = SKCODE . CDCODE 
						LEFT OUTER JOIN TGSCMLIB . USICODEF AS WNCODE 
						ON 'WN' = WNCODE . CDINDEX 
						AND IPHA . IHWONSAN1 = WNCODE . CDCODE 
						WHERE SUBSTR ( CHAR ( IPHA . IHIPHANG ) , 1 , 6 ) BETWEEN P_SDATE AND P_EDATE 
						AND JEBL . JBHWAJU IN ( SELECT * FROM TABLE ( PTSCMLIB . SF_GB_REVCOLROW ( CAST ( P_HWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
						AND ( JEBL . JBBEJNQTY + JEBL . JBBEIPQTY - JEBL . JBBECHQTY ) <> 0 
						AND ( JEBL . JBHWAKQTY + JEBL . JBHWIPQTY - JEBL . JBHWCHQTY ) <> 0 
  
					) AS TEMP 
				) 
  
				SELECT 
				ROWNO , 
				COMPANY , 
				IHHANGCHA , 
				VSDESC1 , 
				IPGOKJONG , 
				GKDESC1 , 
				SKDESC1 , 
				WNDESC1 , 
				IHIPHANG , 
				IHJAKENDAT , 
				IPIPSTDAT , 
				IHJUKHANO , 
				TRIM ( TO_CHAR ( JBBEJNQTY , '9,999,990.000' ) ) AS JBBEJNQTY , 
				TRIM ( TO_CHAR ( JBHWAKQTY , '9,999,990.000' ) ) AS JBHWAKQTY , 
				TRIM ( TO_CHAR ( GAMQTY , '9,999,990.000' ) ) AS GAMQTY 
				FROM ORIGINAL_DATA AS A 
				WHERE ROWNO BETWEEN CAST ( P_STNUM AS VARCHAR ( 100 ) ) AND CAST ( P_FNNUM AS VARCHAR ( 100 ) ) 
				ORDER BY ROWNO ; 
  
			OPEN REFCURSOR ; 
  
		END LIST ; 
  
		PAGING : BEGIN  -- 페이징 
			DECLARE REFCURSOR2 CURSOR WITH RETURN FOR 
  
				SELECT 
				COUNT ( * ) AS TOTALCOUNT 
				FROM 
				( 
					SELECT 
					DISTINCT 
					'그레인' AS COMPANY , 
					IPHA . IHHANGCHA , 
					VSCODE . CDDESC1 AS VSDESC1 , 
					IPGO . IPGOKJONG , 
					GKCODE . CDDESC1 AS GKDESC1 , 
					SKCODE . CDDESC1 AS SKDESC1 , 
					WNCODE . CDDESC1 AS WNDESC1 , 
					IHIPHANG , 
					IHJAKENDAT , 
					IPIPSTDAT , 
					IHJUKHANO , 
					( JBBEJNQTY + JBBEIPQTY - JBBECHQTY ) AS JBBEJNQTY , 
					( JBHWAKQTY + JBHWIPQTY - JBHWCHQTY ) AS JBHWAKQTY , 
					( ( JBBEJNQTY + JBBEIPQTY - JBBECHQTY ) - ( JBHWAKQTY + JBHWIPQTY - JBHWCHQTY ) ) AS GAMQTY 
					FROM TGSCMLIB . USIIPHAF AS IPHA 
					LEFT OUTER JOIN TGSCMLIB . USIIPGOF AS IPGO 
					ON IPHA . IHHANGCHA = IPGO . IPHANGCHA 
					LEFT OUTER JOIN TGSCMLIB . USIJEBLF AS JEBL 
					ON IPGO . IPHANGCHA = JEBL . JBHANGCHA 
					AND IPGO . IPGOKJONG = JEBL . JBGOKJONG 
					LEFT OUTER JOIN TGSCMLIB . USICODEF AS VSCODE 
					ON 'VS' = VSCODE . CDINDEX 
					AND IPHA . IHHANGCHA = VSCODE . CDCODE 
					LEFT OUTER JOIN TGSCMLIB . USICODEF AS GKCODE 
					ON 'GK' = GKCODE . CDINDEX 
					AND IPGO . IPGOKJONG = GKCODE . CDCODE 
					LEFT OUTER JOIN TGSCMLIB . USICODEF AS SKCODE 
					ON 'SK' = SKCODE . CDINDEX 
					AND IPHA . IHSOSOK = SKCODE . CDCODE 
					LEFT OUTER JOIN TGSCMLIB . USICODEF AS WNCODE 
					ON 'WN' = WNCODE . CDINDEX 
					AND IPHA . IHWONSAN1 = WNCODE . CDCODE 
					WHERE SUBSTR ( CHAR ( IPHA . IHIPHANG ) , 1 , 6 ) BETWEEN P_SDATE AND P_EDATE 
					AND JEBL . JBHWAJU IN ( SELECT * FROM TABLE ( PTSCMLIB . SF_GB_REVCOLROW ( CAST ( P_HWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
					AND ( JEBL . JBBEJNQTY + JEBL . JBBEIPQTY - JEBL . JBBECHQTY ) <> 0 
					AND ( JEBL . JBHWAKQTY + JEBL . JBHWIPQTY - JEBL . JBHWCHQTY ) <> 0 
  
					UNION ALL 
  
					SELECT 
					DISTINCT 
					'평택' AS COMPANY , 
					IPHA . IHHANGCHA , 
					VSCODE . CDDESC1 AS VSDESC1 , 
					IPGO . IPGOKJONG , 
					GKCODE . CDDESC1 AS GKDESC1 , 
					SKCODE . CDDESC1 AS SKDESC1 , 
					WNCODE . CDDESC1 AS WNDESC1 , 
					IHIPHANG , 
					IHJAKENDAT , 
					IPIPSTDAT , 
					IHJUKHANO , 
					( JBBEJNQTY + JBBEIPQTY - JBBECHQTY ) AS JBBEJNQTY , 
					( JBHWAKQTY + JBHWIPQTY - JBHWCHQTY ) AS JBHWAKQTY , 
					( ( JBBEJNQTY + JBBEIPQTY - JBBECHQTY ) - ( JBHWAKQTY + JBHWIPQTY - JBHWCHQTY ) ) AS GAMQTY 
					FROM PTSCMLIB . USIIPHAF AS IPHA 
					LEFT OUTER JOIN PTSCMLIB . USIIPGOF AS IPGO 
					ON IPHA . IHHANGCHA = IPGO . IPHANGCHA 
					LEFT OUTER JOIN PTSCMLIB . USIJEBLF AS JEBL 
					ON IPGO . IPHANGCHA = JEBL . JBHANGCHA 
					AND IPGO . IPGOKJONG = JEBL . JBGOKJONG 
					LEFT OUTER JOIN TGSCMLIB . USICODEF AS VSCODE 
					ON 'VP' = VSCODE . CDINDEX 
					AND IPHA . IHHANGCHA = VSCODE . CDCODE 
					LEFT OUTER JOIN TGSCMLIB . USICODEF AS GKCODE 
					ON 'GK' = GKCODE . CDINDEX 
					AND IPGO . IPGOKJONG = GKCODE . CDCODE 
					LEFT OUTER JOIN TGSCMLIB . USICODEF AS SKCODE 
					ON 'SK' = SKCODE . CDINDEX 
					AND IPHA . IHSOSOK = SKCODE . CDCODE 
					LEFT OUTER JOIN TGSCMLIB . USICODEF AS WNCODE 
					ON 'WN' = WNCODE . CDINDEX 
					AND IPHA . IHWONSAN1 = WNCODE . CDCODE 
					WHERE SUBSTR ( CHAR ( IPHA . IHIPHANG ) , 1 , 6 ) BETWEEN P_SDATE AND P_EDATE 
					AND JEBL . JBHWAJU IN ( SELECT * FROM TABLE ( PTSCMLIB . SF_GB_REVCOLROW ( CAST ( P_HWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
					AND ( JEBL . JBBEJNQTY + JEBL . JBBEIPQTY - JEBL . JBBECHQTY ) <> 0 
					AND ( JEBL . JBHWAKQTY + JEBL . JBHWIPQTY - JEBL . JBHWCHQTY ) <> 0 
				) AS TEMP ; 
  
			OPEN REFCURSOR2 ; 
  
		END PAGING ; 
  
	END MAIN ; 
END P1  ; 

