DROP PROCEDURE TYJINFWLIB.SP_TYCSS_CSS2010_LIST;

CREATE PROCEDURE TYJINFWLIB.SP_TYCSS_CSS2010_LIST ( 
	IN P_CURRENTPAGEINDEX INTEGER , 
	IN P_PAGESIZE INTEGER , 
	IN P_DATE VARCHAR(6) , 
	IN P_HWAJU VARCHAR(50) ) 
	DYNAMIC RESULT SETS 2 
	LANGUAGE SQL 
	SPECIFIC TYJINFWLIB.SP_TYCSS_CSS2010_LIST 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	DECRESULT = (31, 31, 00) , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN  -- 시작 
	DECLARE P_STNUM INTEGER ; 
	DECLARE P_FNNUM INTEGER ; 
	DECLARE P_SQLSTRING VARCHAR ( 4000 ) ; 
	DECLARE P_SQLTOTALROWCOUNT VARCHAR ( 4000 ) ; 
	DECLARE P_TABLE_QUERY			VARCHAR ( 5000 ) ; 
	DECLARE P_COUNT_QUERY			VARCHAR ( 5000 ) ; 
  
	PREV : BEGIN  -- 값 설정 
		SET P_STNUM = ( P_PAGESIZE * ( P_CURRENTPAGEINDEX - 1 ) ) + 1 ; 
	SET P_FNNUM = P_PAGESIZE * P_CURRENTPAGEINDEX ; 
	END PREV ; 
  
	MAIN : BEGIN  -- 실행부      
	LIST : BEGIN  -- 리스트 
			DECLARE REFCURSOR CURSOR WITH RETURN FOR 
  
				WITH ORIGINAL_DATA AS 
				( 
					SELECT 
					BKHANGCHA,
					BKGOKJONG,
					BKYYMMDD,
					VSCODE . CDDESC1 AS VSDESC1,
					GKCODE . CDDESC1 AS GKDESC1,
					BKYSDATE,
					( SUM ( BKBOKAMT ) + DECIMAL ( SUM ( BKBOKAMT ) / 10 ) ) AS BKBOKAMT,
					SUM ( BKBOKAMT ) AS GONGHAP,
					DECIMAL ( SUM ( BKBOKAMT ) / 10 ) AS VATHAP,
					BKYDHWAJU,
					BKHWAJU 
					FROM TYSCMLIB . USIMCBKF AS MCBK 
					LEFT OUTER JOIN TYSCMLIB . USICODEF AS VSCODE 
					ON 'VS' = VSCODE . CDINDEX 
					AND MCBK . BKHANGCHA = VSCODE . CDCODE 
					LEFT OUTER JOIN TYSCMLIB . USICODEF AS GKCODE 
					ON 'GK' = GKCODE . CDINDEX 
					AND MCBK . BKGOKJONG = GKCODE . CDCODE 
					WHERE BKMCYYMM = P_DATE 
					AND BKHWAJU IN ( SELECT * FROM TABLE ( TYSCMLIB . SF_GB_REVCOLROW ( CAST ( P_HWAJU AS VARCHAR ( 100 ) ),',' ) ) AS INTABLE ) 
					GROUP BY BKHANGCHA,BKGOKJONG,BKYYMMDD,VSCODE . CDDESC1,GKCODE . CDDESC1,BKYDHWAJU,BKYSDATE, BKHWAJU
					ORDER BY BKYYMMDD,BKHANGCHA,BKGOKJONG,BKYSDATE 
				),

				DETAIL AS
				(
					SELECT
					ROW_NUMBER( ) OVER(ORDER BY ORIGN.BKYYMMDD, ORIGN.BKHANGCHA, ORIGN.BKGOKJONG, ORIGN.BKYSDATE) AS ROWNO , 
					ORIGN.BKHANGCHA,
					ORIGN.BKGOKJONG,
					ORIGN.BKYYMMDD,
					ORIGN.VSDESC1,
					ORIGN.GKDESC1,
					ORIGN.BKYSDATE,
					ORIGN.BKBOKAMT AS BKBOKAMT_SUM,
					ORIGN.GONGHAP,
					ORIGN.VATHAP,
					ORIGN.BKYDHWAJU,
					MCBK.BKDATE,
					MCBK.BKCHULQTY,
					MCBK.BKJEGOQTY,
					MCBK.BKDANGA,
					MCBK.BKBOKAMT
					FROM ORIGINAL_DATA AS ORIGN
					LEFT OUTER JOIN TYSCMLIB.USIMCBKF AS MCBK
					ON     ORIGN.BKYYMMDD  = MCBK.BKYYMMDD
					AND   ORIGN.BKHANGCHA = MCBK.BKHANGCHA
					AND   ORIGN.BKGOKJONG  = MCBK.BKGOKJONG
					AND   ORIGN.BKHWAJU     = MCBK.BKHWAJU
					AND   ORIGN.BKYSDATE    = MCBK.BKYSDATE
					AND   ORIGN.BKYDHWAJU = MCBK.BKYDHWAJU	
				)

				SELECT
				ROWNO,
				BKHANGCHA, 
				BKGOKJONG,
				BKYYMMDD,
				VSDESC1,
				GKDESC1,
				BKYSDATE,
				BKBOKAMT_SUM,
				GONGHAP,
				VATHAP,
				BKYDHWAJU,
				BKDATE,
				TRIM(TO_CHAR(BKCHULQTY, '9,999,990.000')) AS BKCHULQTY,
				TRIM(TO_CHAR(BKJEGOQTY, '9,999,990.000')) AS BKJEGOQTY,
				BKDANGA,
				BKBOKAMT
				FROM DETAIL
				WHERE ROWNO BETWEEN CAST ( P_STNUM AS VARCHAR ( 100 ) ) AND CAST ( P_FNNUM AS VARCHAR ( 100 ) );
			 
			OPEN REFCURSOR ; 
  
		END LIST ; 
	 
		PAGING : BEGIN  -- 페이징 
			DECLARE REFCURSOR2 CURSOR WITH RETURN FOR 
				 
				WITH ORIGINAL_DATA AS 
				( 
					SELECT 
					BKHANGCHA,
					BKGOKJONG,
					BKYYMMDD,
					VSCODE . CDDESC1 AS VSDESC1,
					GKCODE . CDDESC1 AS GKDESC1,
					BKYSDATE,
					( SUM ( BKBOKAMT ) + DECIMAL ( SUM ( BKBOKAMT ) / 10 ) ) AS BKBOKAMT,
					SUM ( BKBOKAMT ) AS GONGHAP,
					DECIMAL ( SUM ( BKBOKAMT ) / 10 ) AS VATHAP,
					BKYDHWAJU,
					BKHWAJU 
					FROM TYSCMLIB . USIMCBKF AS MCBK 
					LEFT OUTER JOIN TYSCMLIB . USICODEF AS VSCODE 
					ON 'VS' = VSCODE . CDINDEX 
					AND MCBK . BKHANGCHA = VSCODE . CDCODE 
					LEFT OUTER JOIN TYSCMLIB . USICODEF AS GKCODE 
					ON 'GK' = GKCODE . CDINDEX 
					AND MCBK . BKGOKJONG = GKCODE . CDCODE 
					WHERE BKMCYYMM = P_DATE 
					AND BKHWAJU IN ( SELECT * FROM TABLE ( TYSCMLIB . SF_GB_REVCOLROW ( CAST ( P_HWAJU AS VARCHAR ( 100 ) ),',' ) ) AS INTABLE ) 
					GROUP BY BKHANGCHA,BKGOKJONG,BKYYMMDD,VSCODE . CDDESC1,GKCODE . CDDESC1,BKYDHWAJU,BKYSDATE, BKHWAJU
					ORDER BY BKYYMMDD,BKHANGCHA,BKGOKJONG,BKYSDATE 
				),

				DETAIL AS
				(
					SELECT
					ROW_NUMBER( ) OVER(ORDER BY ORIGN.BKYYMMDD, ORIGN.BKHANGCHA, ORIGN.BKGOKJONG, ORIGN.BKYSDATE) AS ROWNO , 
					ORIGN.BKHANGCHA,
					ORIGN.BKGOKJONG,
					ORIGN.BKYYMMDD,
					ORIGN.VSDESC1,
					ORIGN.GKDESC1,
					ORIGN.BKYSDATE,
					ORIGN.BKBOKAMT AS BKBOKAMT_SUM,
					ORIGN.GONGHAP,
					ORIGN.VATHAP,
					ORIGN.BKYDHWAJU,
					MCBK.BKDATE,
					MCBK.BKCHULQTY,
					MCBK.BKJEGOQTY,
					MCBK.BKDANGA,
					MCBK.BKBOKAMT
					FROM ORIGINAL_DATA AS ORIGN
					LEFT OUTER JOIN TYSCMLIB.USIMCBKF AS MCBK
					ON     ORIGN.BKYYMMDD  = MCBK.BKYYMMDD
					AND   ORIGN.BKHANGCHA = MCBK.BKHANGCHA
					AND   ORIGN.BKGOKJONG  = MCBK.BKGOKJONG
					AND   ORIGN.BKHWAJU     = MCBK.BKHWAJU
					AND   ORIGN.BKYSDATE    = MCBK.BKYSDATE
					AND   ORIGN.BKYDHWAJU = MCBK.BKYDHWAJU	
				)

				SELECT 
				COUNT ( * ) AS TOTALCOUNT 
				FROM DETAIL ; 
  
			OPEN REFCURSOR2 ; 
  
		END PAGING ; 
  
	END MAIN ; 
END P1  ; 
  
GRANT ALTER , EXECUTE   
ON SPECIFIC PROCEDURE TYJINFWLIB.SP_TYCSS_CSS2010_LIST 
TO KSGPDM WITH GRANT OPTION ; 

CALL TYJINFWLIB.SP_TYCSS_CSS2010_LIST(1, 15, 202101, 'K04');