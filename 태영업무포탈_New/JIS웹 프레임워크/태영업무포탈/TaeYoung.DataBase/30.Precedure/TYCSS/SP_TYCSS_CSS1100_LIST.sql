DROP PROCEDURE TYJINFWLIB.SP_TYCSS_CSS1100_LIST;


SET PATH "QSYS","QSYS2","SYSPROC","SYSIBMADM","KSGPDM" ; 
  
CREATE PROCEDURE TYJINFWLIB.SP_TYCSS_CSS1100_LIST ( 
	IN P_CURRENTPAGEINDEX INTEGER , 
	IN P_PAGESIZE INTEGER , 
	IN P_SDATE VARCHAR(8) , 
	IN P_EDATE VARCHAR(8) , 
	IN P_HWAJU VARCHAR(50) , 
	IN P_GUBUN VARCHAR(1) ) 
	DYNAMIC RESULT SETS 2 
	LANGUAGE SQL 
	SPECIFIC TYJINFWLIB.SP_TYCSS_CSS1100_LIST 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	DECRESULT = (31, 31, 00) , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN  -- 시작 
	DECLARE P_STNUM INTEGER ; 
	DECLARE P_FNNUM INTEGER ; 
	DECLARE P_SQLSTRING VARCHAR ( 4000 ) ; 
	DECLARE P_SQLTOTALROWCOUNT VARCHAR ( 4000 ) ; 
	DECLARE P_TABLE_QUERY			VARCHAR ( 5000 ) ; 
	DECLARE P_COUNT_QUERY			VARCHAR ( 5000 ) ; 
  
	PREV : BEGIN  -- 값 설정 
		SET P_STNUM = ( P_PAGESIZE * ( P_CURRENTPAGEINDEX - 1 ) ) + 1 ; 
	SET P_FNNUM = P_PAGESIZE * P_CURRENTPAGEINDEX ; 
	END PREV ; 
  
	MAIN : BEGIN  -- 실행부 
		IF P_GUBUN = 'S' THEN 
  
			LIST1 : BEGIN  -- 리스트 
				DECLARE REFCURSOR CURSOR WITH RETURN FOR 
  
					WITH MAST AS 
					( 
						SELECT 
						CAST ( P_SDATE AS CHAR ( 8 ) ) AS IN_STDATE , 
						CAST ( P_EDATE AS CHAR ( 8 ) ) AS IN_EDDATE 
						FROM SYSIBM . SYSDUMMY1 
					) , 
  
					TABLE1 AS 
					( 
						SELECT 
						CSGOKJONG , 
						GKCODE . CDDESC1 AS GKDESC1 , 
						CSHANGCHA , 
						VSCODE . CDDESC1 AS VSDESC1 , 
						CSBLNO , 
						( TRIM ( CHAR ( CSHMNO1 ) ) || '-' || TRIM ( CHAR ( CSHMNO2 ) ) ) AS CSHMN , 
						CSDATE , 
						CSSEQ , 
						CSQTY , 
						CSSINNO , 
						CSCODE . CDDESC1 AS CSDESC1 
						FROM TYSCMLIB . USICUSTF AS CUST 
						LEFT OUTER JOIN TYSCMLIB . USICODEF AS GKCODE 
						ON 'GK' = GKCODE . CDINDEX 
						AND CUST . CSGOKJONG = GKCODE . CDCODE 
						LEFT OUTER JOIN TYSCMLIB . USICODEF AS VSCODE 
						ON 'VS' = VSCODE . CDINDEX 
						AND CUST . CSHANGCHA = VSCODE . CDCODE 
						LEFT OUTER JOIN TYSCMLIB . USICODEF AS CSCODE 
						ON 'CS' = CSCODE . CDINDEX 
						AND CUST . CSSINNM = CSCODE . CDCODE 
						INNER JOIN MAST 
						ON 1 = 1 
						WHERE CUST . CSHWAJU IN ( SELECT * FROM TABLE ( TYSCMLIB . SF_GB_REVCOLROW ( CAST ( P_HWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
						AND CUST . CSDATE BETWEEN IN_STDATE AND IN_EDDATE 
						ORDER BY CSGOKJONG , CSHANGCHA 
					) , 
  
					TABLE2 AS 
					( 
						SELECT 
						'D' AS GUBUN , 
						CSGOKJONG , 
						GKDESC1 , 
						CSHANGCHA , 
						VSDESC1 , 
						CSBLNO , 
						CSHMN , 
						DIGITS ( CSDATE ) AS CSDATE , 
						DIGITS ( CSSEQ ) AS CSSEQ , 
						CSQTY , 
						CSSINNO , 
						CSDESC1 
						FROM TABLE1 
  
						UNION ALL 
  
						SELECT 
						'H' AS GUBUN , 
						CSGOKJONG , 
						GKDESC1 , 
						CSHANGCHA , 
						VSDESC1 , 
						'' AS CSBLNO , 
						'' AS CSHMN , 
						'' AS CSDATE , 
						'' AS CSSEQ , 
						SUM ( CSQTY ) AS CSQTY , 
						'' AS CSSINNO , 
						'' AS CSDESC1 
						FROM TABLE1 
						GROUP BY GROUPING SETS ( ( CSGOKJONG , GKDESC1 , CSHANGCHA , VSDESC1 ) ) 
  
						UNION ALL 
  
						SELECT 
						'V' AS GUBUN , 
						CSGOKJONG , 
						GKDESC1 , 
						MAX ( CSHANGCHA ) AS CSHANGCHA , 
						'' AS VSDESC1 , 
						'' AS CSBLNO , 
						'' AS CSHMN , 
						'' AS CSDATE , 
						'' AS CSSEQ , 
						SUM ( CSQTY ) AS CSQTY , 
						'' AS CSSINNO , 
						'' AS CSDESC1 
						FROM TABLE1 
						GROUP BY GROUPING SETS ( ( CSGOKJONG , GKDESC1 ) ) 
  
						ORDER BY CSGOKJONG , CSHANGCHA , GUBUN 
					) , 
					 
					TABLE3 AS 
					( 
						SELECT 
						ROWNUMBER ( ) OVER ( ORDER BY CSGOKJONG , CSHANGCHA , GUBUN ) AS ROWNO , 
						GUBUN , 
						( CASE WHEN GUBUN IN ( 'H' , 'V' ) THEN '' ELSE CSGOKJONG END ) AS CSGOKJONG , 
						GKDESC1 , 
						( CASE WHEN GUBUN IN ( 'H' , 'V' ) THEN '' ELSE CSHANGCHA END ) AS CSHANGCHA , 
						( CASE WHEN GUBUN IN ( 'H' ) THEN '<div style="color:blue" >소     계</div>' 
						WHEN GUBUN IN ( 'V' ) THEN '<div style="color:red" >곡 종 계</div>' 
						ELSE VSDESC1 END ) AS VSDESC1 , 
						CSBLNO , 
						CSHMN , 
						CSDATE , 
						CSSEQ , 
						( CASE WHEN GUBUN IN ( 'H' ) THEN '<div style="color:blue" >' || TRIM ( TO_CHAR ( CSQTY , '9,999,990.000' ) ) || '</div>' 
						WHEN GUBUN IN ( 'V' ) THEN '<div style="color:red" >' || TRIM ( TO_CHAR ( CSQTY , '9,999,990.000' ) ) || '</div>' 
						ELSE TRIM ( TO_CHAR ( CSQTY , '9,999,990.000' ) ) END ) AS CSQTY , 
						CSSINNO , 
						CSDESC1 
						FROM TABLE2 
					) 
  
					SELECT 
					ROWNO , 
					GUBUN , 
					CSGOKJONG , 
					GKDESC1 , 
					CSHANGCHA , 
					VSDESC1 , 
					CSBLNO , 
					CSHMN , 
					CSDATE , 
					CSSEQ , 
					CSQTY , 
					CSSINNO , 
					CSDESC1 
					FROM TABLE3 
					WHERE ROWNO BETWEEN CAST ( P_STNUM AS VARCHAR ( 100 ) ) AND CAST ( P_FNNUM AS VARCHAR ( 100 ) ) ; 
  
				OPEN REFCURSOR ; 
			 
			END LIST1 ; 
  
			PAGING1 : BEGIN  -- 페이징 
				DECLARE REFCURSOR3 CURSOR WITH RETURN FOR 
  
					WITH MAST AS 
					( 
						SELECT 
						CAST ( P_SDATE AS CHAR ( 8 ) ) AS IN_STDATE , 
						CAST ( P_EDATE AS CHAR ( 8 ) ) AS IN_EDDATE 
						FROM SYSIBM . SYSDUMMY1 
					) , 
  
					TABLE1 AS 
					( 
						SELECT 
						CSGOKJONG , 
						GKCODE . CDDESC1 AS GKDESC1 , 
						CSHANGCHA , 
						VSCODE . CDDESC1 AS VSDESC1 , 
						CSBLNO , 
						( TRIM ( CHAR ( CSHMNO1 ) ) || '-' || TRIM ( CHAR ( CSHMNO2 ) ) ) AS CSHMN , 
						CSDATE , 
						CSSEQ , 
						CSQTY , 
						CSSINNO , 
						CSCODE . CDDESC1 AS CSDESC1 
						FROM TYSCMLIB . USICUSTF AS CUST 
						LEFT OUTER JOIN TYSCMLIB . USICODEF AS GKCODE 
						ON 'GK' = GKCODE . CDINDEX 
						AND CUST . CSGOKJONG = GKCODE . CDCODE 
						LEFT OUTER JOIN TYSCMLIB . USICODEF AS VSCODE 
						ON 'VS' = VSCODE . CDINDEX 
						AND CUST . CSHANGCHA = VSCODE . CDCODE 
						LEFT OUTER JOIN TYSCMLIB . USICODEF AS CSCODE 
						ON 'CS' = CSCODE . CDINDEX 
						AND CUST . CSSINNM = CSCODE . CDCODE 
						INNER JOIN MAST 
						ON 1 = 1 
						WHERE CUST . CSHWAJU IN ( SELECT * FROM TABLE ( TYSCMLIB . SF_GB_REVCOLROW ( CAST ( P_HWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
						AND CUST . CSDATE BETWEEN IN_STDATE AND IN_EDDATE 
						ORDER BY CSGOKJONG , CSHANGCHA 
					) , 
  
					TABLE2 AS 
					( 
						SELECT 
						'D' AS GUBUN , 
						CSGOKJONG , 
						GKDESC1 , 
						CSHANGCHA , 
						VSDESC1 , 
						CSBLNO , 
						CSHMN , 
						DIGITS ( CSDATE ) AS CSDATE , 
						DIGITS ( CSSEQ ) AS CSSEQ , 
						CSQTY , 
						CSSINNO , 
						CSDESC1 
						FROM TABLE1 
  
						UNION ALL 
  
						SELECT 
						'H' AS GUBUN , 
						CSGOKJONG , 
						GKDESC1 , 
						CSHANGCHA , 
						VSDESC1 , 
						'' AS CSBLNO , 
						'' AS CSHMN , 
						'' AS CSDATE , 
						'' AS CSSEQ , 
						SUM ( CSQTY ) AS CSQTY , 
						'' AS CSSINNO , 
						'' AS CSDESC1 
						FROM TABLE1 
						GROUP BY GROUPING SETS ( ( CSGOKJONG , GKDESC1 , CSHANGCHA , VSDESC1 ) ) 
  
						UNION ALL 
  
						SELECT 
						'V' AS GUBUN , 
						CSGOKJONG , 
						GKDESC1 , 
						MAX ( CSHANGCHA ) AS CSHANGCHA , 
						'' AS VSDESC1 , 
						'' AS CSBLNO , 
						'' AS CSHMN , 
						'' AS CSDATE , 
						'' AS CSSEQ , 
						SUM ( CSQTY ) AS CSQTY , 
						'' AS CSSINNO , 
						'' AS CSDESC1 
						FROM TABLE1 
						GROUP BY GROUPING SETS ( ( CSGOKJONG , GKDESC1 ) ) 
						ORDER BY CSGOKJONG , CSHANGCHA , GUBUN 
					) 
					 
					SELECT 
					COUNT ( * ) AS TOTALCOUNT 
					FROM TABLE2 ;					 
  
				OPEN REFCURSOR3 ; 
  
			END PAGING1 ; 
			 
		ELSE 
  
			PRINT : BEGIN  -- 프린트 
				DECLARE REFCURSOR5 CURSOR WITH RETURN FOR 
  
					WITH MAST AS 
					( 
						SELECT 
						CAST ( P_SDATE AS CHAR ( 8 ) ) AS IN_STDATE , 
						CAST ( P_EDATE AS CHAR ( 8 ) ) AS IN_EDDATE 
						FROM SYSIBM . SYSDUMMY1 
					) 
  
					SELECT 
					( CSGOKJONG || CSHANGCHA ) AS GUBUN , 
					CSGOKJONG , 
					GKCODE . CDDESC1 AS GKDESC1 , 
					CSHANGCHA , 
					VSCODE . CDDESC1 AS VSDESC1 , 
					CSBLNO , 
					( TRIM ( CHAR ( CSHMNO1 ) ) || '-' || TRIM ( CHAR ( CSHMNO2 ) ) ) AS CSHMN , 
					CSDATE , 
					CSSEQ , 
					CSQTY , 
					CSSINNO , 
					CSCODE . CDDESC1 AS CSDESC1 
					FROM TYSCMLIB . USICUSTF AS CUST 
					LEFT OUTER JOIN TYSCMLIB . USICODEF AS GKCODE 
					ON 'GK' = GKCODE . CDINDEX 
					AND CUST . CSGOKJONG = GKCODE . CDCODE 
					LEFT OUTER JOIN TYSCMLIB . USICODEF AS VSCODE 
					ON 'VS' = VSCODE . CDINDEX 
					AND CUST . CSHANGCHA = VSCODE . CDCODE 
					LEFT OUTER JOIN TYSCMLIB . USICODEF AS CSCODE 
					ON 'CS' = CSCODE . CDINDEX 
					AND CUST . CSSINNM = CSCODE . CDCODE 
					INNER JOIN MAST 
					ON 1 = 1 
					WHERE CUST . CSHWAJU IN ( SELECT * FROM TABLE ( TYSCMLIB . SF_GB_REVCOLROW ( CAST ( P_HWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
					AND CUST . CSDATE BETWEEN IN_STDATE AND IN_EDDATE 
					ORDER BY CSGOKJONG , CSHANGCHA ; 
  
				OPEN REFCURSOR5 ; 
  
			END PRINT ; 
  
		END IF ; 
  
	END MAIN ; 
  
END P1  ; 
  
GRANT ALTER , EXECUTE   
ON SPECIFIC PROCEDURE TYJINFWLIB.SP_TYCSS_CSS1100_LIST 
TO KSGPDM WITH GRANT OPTION ; 

CALL TYJINFWLIB.SP_TYCSS_CSS1100_LIST(1,15, '20210101', '20210507', 'C02', 'S');