DROP PROCEDURE TYJINFWLIB.SP_TYCSS_CSS1050_LIST;
--  Generate SQL 
--  Version:                   	V7R4M0 190621 
--  Generated on:              	21-05-11 15:58:37 
--  Relational Database:       	S78E0180 
--  Standards Option:          	Db2 for i 
SET PATH "QSYS","QSYS2","SYSPROC","SYSIBMADM","KSGPDM" ; 
  
CREATE PROCEDURE TYJINFWLIB.SP_TYCSS_CSS1050_LIST ( 
	IN P_CURRENTPAGEINDEX INTEGER , 
	IN P_PAGESIZE INTEGER , 
	IN P_DATE VARCHAR(8) , 
	IN P_HWAJU VARCHAR(50) , 
	IN P_GUBUN VARCHAR(1) ) 
	DYNAMIC RESULT SETS 2 
	LANGUAGE SQL 
	SPECIFIC TYJINFWLIB.SP_TYCSS_CSS1050_LIST 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	DECRESULT = (31, 31, 00) , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN  -- 시작 
	DECLARE P_STNUM INTEGER ; 
	DECLARE P_FNNUM INTEGER ; 
	DECLARE P_SQLSTRING VARCHAR ( 4000 ) ; 
	DECLARE P_SQLTOTALROWCOUNT VARCHAR ( 4000 ) ; 
	DECLARE P_TABLE_QUERY VARCHAR ( 5000 ) ; 
	DECLARE P_COUNT_QUERY VARCHAR ( 5000 ) ; 
  
  
	DECLARE V_IHIPHANG VARCHAR ( 10 ) ; 
	DECLARE V_JGHANGCHA VARCHAR ( 6 ) ; 
	DECLARE V_VSDESC1 VARCHAR ( 50 ) ; 
	DECLARE V_GKDESC1 VARCHAR ( 50 ) ; 
	DECLARE V_JGGOKJONG VARCHAR ( 2 ) ; 
	DECLARE V_JGBEJNQTY NUMERIC ( 12 , 3 ) ; 
	DECLARE V_JGHWAKQTY NUMERIC ( 12 , 3 ) ; 
	DECLARE V_JGYDQTY NUMERIC ( 12 , 3 ) ; 
	DECLARE V_JGYSQTY NUMERIC ( 12 , 3 ) ; 
	DECLARE V_JGYSYDQTY NUMERIC ( 12 , 3 ) ; 
	DECLARE V_JGCSQTY NUMERIC ( 12 , 3 ) ; 
	DECLARE V_JGCHQTY NUMERIC ( 12 , 3 ) ; 
	DECLARE V_JGYSCHQTY NUMERIC ( 12 , 3 ) ; 
	DECLARE V_JGJEGOQTY NUMERIC ( 12 , 3 ) ; 
	DECLARE V_IPIPSTDAT VARCHAR ( 10 ) ;
	DECLARE V_JGHWAJU VARCHAR ( 3 ) ; 
  
	DECLARE V_IBHWAKQTY NUMERIC ( 12 , 3 ) ; 
	DECLARE V_CSQTY NUMERIC ( 12 , 3 ) ; 
	DECLARE V_CHMTQTY NUMERIC ( 12 , 3 ) ; 
	DECLARE V_CHYNCHQTY NUMERIC ( 12 , 3 ) ; 
  
	DECLARE V_YNQTY NUMERIC ( 12 , 3 ) ; 
	DECLARE V_YSQTY NUMERIC ( 12 , 3 ) ; 
	DECLARE V_YSYDQTY NUMERIC ( 12 , 3 ) ; 
  
	DECLARE V_ROWNO INTEGER ; 
	DECLARE V_HAPBAE NUMERIC ( 12 , 3 ) ; 
	DECLARE V_HAPHWAK NUMERIC ( 12 , 3 ) ; 
	DECLARE V_HAPCS NUMERIC ( 12 , 3 ) ; 
	DECLARE V_HAPCHUL NUMERIC ( 12 , 3 ) ; 
	DECLARE V_HAPJEGO NUMERIC ( 12 , 3 ) ; 
	DECLARE V_HAPYD NUMERIC ( 12 , 3 ) ; 
	DECLARE V_HAPYS NUMERIC ( 12 , 3 ) ; 
	DECLARE V_HAPYSYD NUMERIC ( 12 , 3 ) ; 
	DECLARE V_HAPYSCH NUMERIC ( 12 , 3 ) ; 
	DECLARE V_HAPJAE NUMERIC ( 12 , 3 ) ; 
  
	DECLARE V_COUNT INTEGER ; 
  
  
	SET V_IHIPHANG = '' ; 
	SET V_JGHANGCHA = '' ; 
	SET V_VSDESC1 = '' ; 
	SET V_GKDESC1 = '' ; 
	SET V_JGGOKJONG = '' ; 
	SET V_JGBEJNQTY = 0 ; 
	SET V_JGHWAKQTY = 0 ; 
	SET V_JGYDQTY = 0 ; 
	SET V_JGYSQTY = 0 ; 
	SET V_JGYSYDQTY = 0 ; 
	SET V_JGCSQTY = 0 ; 
	SET V_JGCHQTY = 0 ; 
	SET V_JGYSCHQTY = 0 ; 
	SET V_JGJEGOQTY = 0 ; 
	SET V_IPIPSTDAT = '' ; 
  
	SET V_IBHWAKQTY = 0 ; 
	SET V_CSQTY = 0 ; 
	SET V_CHMTQTY = 0 ; 
	SET V_CHYNCHQTY = 0 ; 
  
	SET V_YNQTY = 0 ; 
	SET V_YSQTY = 0 ; 
	SET V_YSYDQTY = 0 ; 
  
	SET V_COUNT = 0 ; 
  
	SET V_ROWNO = 0 ; 
	SET V_HAPBAE = 0 ; 
	SET V_HAPHWAK = 0 ; 
	SET V_HAPCS = 0 ; 
	SET V_HAPCHUL = 0 ; 
	SET V_HAPJEGO = 0 ; 
	SET V_HAPYD = 0 ; 
	SET V_HAPYS = 0 ; 
	SET V_HAPYSYD = 0 ; 
	SET V_HAPYSCH = 0 ; 
	SET V_HAPJAE = 0 ; 
	SET V_VSDESC1 = '' ; 
	SET V_GKDESC1 = '' ; 
	SET V_IPIPSTDAT = '' ; 
	SET V_IHIPHANG = '' ; 
  
  
	PREV : BEGIN  -- 값 설정 
		SET P_STNUM = ( P_PAGESIZE * ( P_CURRENTPAGEINDEX - 1 ) ) + 1 ; 
	SET P_FNNUM = P_PAGESIZE * P_CURRENTPAGEINDEX ; 
	END PREV ; 
  
  
	 -- 임시테이블부 
	DECLARE GLOBAL TEMPORARY TABLE SESSION . SILO_JGJEGO ( 
			ROWNO			INTEGER 
		,	HAPBAE NUMERIC ( 12 , 3 ) 
		,	HAPHWAK NUMERIC ( 12 , 3 ) 
		,	HAPCS NUMERIC ( 12 , 3 ) 
		,	HAPCHUL NUMERIC ( 12 , 3 ) 
		,	HAPJEGO NUMERIC ( 12 , 3 ) 
		,	HAPYD NUMERIC ( 12 , 3 ) 
		,	HAPYS NUMERIC ( 12 , 3 ) 
		,	HAPYSYD NUMERIC ( 12 , 3 ) 
		,	HAPYSCH NUMERIC ( 12 , 3 ) 
		,	HAPJAE NUMERIC ( 12 , 3 ) 
		,	VSDESC1 VARCHAR ( 50 ) 
		,	GKDESC1 VARCHAR ( 50 ) 
		,	IPIPSTDAT VARCHAR ( 10 ) 
		,	IHIPHANG VARCHAR ( 10 ) 
	) WITH REPLACE ; 
  
  
  
  
	R1 : FOR C1 AS 
  
			SELECT 
			( SUBSTR ( CHAR ( IHIPHANG ) , 1 , 4 ) || '-' || SUBSTR ( CHAR ( IHIPHANG ) , 5 , 2 ) || '-' || SUBSTR ( CHAR ( IHIPHANG ) , 7 , 2 ) ) AS IHIPHANG , 
			JGHANGCHA , 
			JGGOKJONG , 
			JGHWAJU,
			( JGBEJNQTY + JGBEIPQTY - JGBECHQTY ) AS JGBEJNQTY , 
			( JGHWAKQTY + JGHWIPQTY - JGHWCHQTY ) AS JGHWAKQTY , 
			JGYDQTY , 
			JGYSQTY , 
			JGYSYDQTY , 
			JGCSQTY , 
			JGCHQTY , 
			JGYSCHQTY , 
			JGJEGOQTY , 
			VSCODE . CDDESC1 AS VSDESC1 , 
			GKCODE . CDDESC1 AS GKDESC1 , 
			( SUBSTR ( CHAR ( IPIPSTDAT ) , 1 , 4 ) || '/' || SUBSTR ( CHAR ( IPIPSTDAT ) , 5 , 2 ) || '/' || SUBSTR ( CHAR ( IPIPSTDAT ) , 7 , 2 ) ) AS IPIPSTDAT 
			FROM TYSCMLIB . USIJEGOF AS JEGO 
			LEFT OUTER JOIN TYSCMLIB . USIIPGOF AS IPGO 
			ON JEGO . JGHANGCHA = IPGO . IPHANGCHA 
			AND JEGO . JGGOKJONG = IPGO . IPGOKJONG 
			LEFT OUTER JOIN TYSCMLIB . USIIPHAF AS IPHA 
			ON JEGO . JGHANGCHA = IPHA . IHHANGCHA 
			LEFT OUTER JOIN TYSCMLIB . USICODEF AS VSCODE 
			ON 'VS' = VSCODE . CDINDEX 
			AND JEGO . JGHANGCHA = VSCODE . CDCODE 
			LEFT OUTER JOIN TYSCMLIB . USICODEF AS GKCODE 
			ON 'GK' = GKCODE . CDINDEX 
			AND JEGO . JGGOKJONG = GKCODE . CDCODE 
			WHERE JGHWAJU IN ( SELECT * FROM TABLE ( TYSCMLIB . SF_GB_REVCOLROW ( CAST ( P_HWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
			AND JGHANGCHA >= '200901' 
			ORDER BY IHIPHANG , JGHANGCHA 
  
		DO 
  
		SET V_IHIPHANG = '' ; 
		SET V_JGHANGCHA = '' ; 
		SET V_VSDESC1 = '' ; 
		SET V_GKDESC1 = '' ; 
		SET V_JGGOKJONG = '' ; 
		SET V_JGBEJNQTY = 0 ; 
		SET V_JGHWAKQTY = 0 ; 
		SET V_JGYDQTY = 0 ; 
		SET V_JGYSQTY = 0 ; 
		SET V_JGYSYDQTY = 0 ; 
		SET V_JGCSQTY = 0 ; 
		SET V_JGCHQTY = 0 ; 
		SET V_JGYSCHQTY = 0 ; 
		SET V_JGJEGOQTY = 0 ; 
		SET V_IPIPSTDAT = '' ; 
		SET V_JGHWAJU = '';
  
		SET V_IHIPHANG = IHIPHANG ; 
		SET V_JGHANGCHA = JGHANGCHA ; 
		SET V_VSDESC1 = VSDESC1 ; 
		SET V_JGGOKJONG = JGGOKJONG ; 
		SET V_GKDESC1 = GKDESC1 ; 
		SET V_JGBEJNQTY = JGBEJNQTY ; 
		SET V_JGHWAKQTY = JGHWAKQTY ; 
		SET V_JGYDQTY = JGYDQTY ; 
		SET V_JGYSQTY = JGYSQTY ; 
		SET V_JGYSYDQTY = JGYSYDQTY ; 
		SET V_JGCSQTY = JGCSQTY ; 
		SET V_JGCHQTY = JGCHQTY ; 
		SET V_JGYSCHQTY = JGYSCHQTY ; 
		SET V_JGJEGOQTY = JGJEGOQTY ; 
		SET V_IPIPSTDAT = IPIPSTDAT ; 
		SET V_JGHWAJU = JGHWAJU;
  
  
		SET V_IBHWAKQTY = 0 ; 
		SET V_CSQTY = 0 ; 
		SET V_CHMTQTY = 0 ; 
		SET V_CHYNCHQTY = 0 ; 
  
		SELECT 
		COALESCE ( SUM ( IBHWAKQTY + IBHWIPQTY - IBHWCHQTY ) , 0 ) INTO V_IBHWAKQTY 
		FROM TYSCMLIB . USIIPBLF 
		WHERE IBHANGCHA = V_JGHANGCHA 
		AND IBGOKJONG = V_JGGOKJONG 
		AND IBHWAJU IN ( SELECT * FROM TABLE ( TYSCMLIB . SF_GB_REVCOLROW ( CAST ( V_JGHWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
		AND IBDATE > INT ( P_DATE ) ; 
  
		IF ( V_IBHWAKQTY <> 0 AND V_JGHWAKQTY = V_IBHWAKQTY ) THEN 
  
			SET V_COUNT = 0 ; 
		ELSE 
  
			SET V_CSQTY = 0 ; 
  
			SELECT 
			COALESCE ( SUM ( CSQTY ) , 0 ) INTO V_CSQTY 
			FROM TYSCMLIB . USICUSTF 
			WHERE CSHANGCHA = V_JGHANGCHA 
			AND CSGOKJONG = V_JGGOKJONG 
			AND CSHWAJU IN ( SELECT * FROM TABLE ( TYSCMLIB . SF_GB_REVCOLROW ( CAST ( V_JGHWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
			AND CSDATE > INT ( P_DATE ) ; 
  
  
			SET V_CHMTQTY = 0 ; 
			SET V_CHYNCHQTY = 0 ; 
  
			SELECT 
			COALESCE ( SUM ( CASE WHEN CHYNCHQTY = 0 THEN CHMTQTY 
			ELSE 0 END ) , 0 ) , 
			COALESCE ( SUM ( CHYNCHQTY ) , 0 ) 
			INTO V_CHMTQTY , V_CHYNCHQTY 
			FROM TYSCMLIB . USICHULF 
			WHERE CHHANGCHA = V_JGHANGCHA 
			AND CHGOKJONG = V_JGGOKJONG 
			AND CHHWAJU IN ( SELECT * FROM TABLE ( TYSCMLIB . SF_GB_REVCOLROW ( CAST ( V_JGHWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
			AND CHCHULDAT > INT ( P_DATE ) ; 
  
  
  
			SET V_COUNT = 0 ; 
  
			SET V_YNQTY = 0 ; 
			SET V_YSQTY = 0 ; 
			SET V_YSYDQTY = 0 ; 
			 
			R11 : FOR C11 AS 
  
						 -- 양도량 
						SELECT 
						COALESCE ( SUM ( YNQTY ) , 0 ) AS YNQTY 
						FROM TYSCMLIB . USIYANGNF 
						WHERE YNHANGCHA = V_JGHANGCHA 
						AND YNGOKJONG = V_JGGOKJONG 
						AND YNHWAJU IN ( SELECT * FROM TABLE ( TYSCMLIB . SF_GB_REVCOLROW ( CAST ( V_JGHWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
						AND YNYNHWAJU IN ( SELECT * FROM TABLE ( TYSCMLIB . SF_GB_REVCOLROW ( CAST ( V_JGHWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
						AND YNYSDATE > INT ( P_DATE ) 
						AND YNQTY > 0 
						UNION ALL 
						 -- 양수량 
						SELECT 
						COALESCE ( SUM ( YNQTY + YNYSYDQTY ) , 0 ) AS YNQTY 
						FROM TYSCMLIB . USIYANGNF 
						WHERE YNHANGCHA = V_JGHANGCHA 
						AND YNGOKJONG = V_JGGOKJONG 
						AND YNYSHWAJU IN ( SELECT * FROM TABLE ( TYSCMLIB . SF_GB_REVCOLROW ( CAST ( V_JGHWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
						AND YNYSDATE > INT ( P_DATE ) 
						UNION ALL 
						 -- 양수양도량 
						SELECT 
						COALESCE ( SUM ( YNYSYDQTY ) , 0 ) AS YNQTY 
						FROM TYSCMLIB . USIYANGNF 
						WHERE YNHANGCHA = V_JGHANGCHA 
						AND YNGOKJONG = V_JGGOKJONG 
						AND YNHWAJU IN ( SELECT * FROM TABLE ( TYSCMLIB . SF_GB_REVCOLROW ( CAST ( V_JGHWAJU AS VARCHAR ( 100 ) ) , ',' ) ) AS INTABLE ) 
						AND YNYSDATE > INT ( P_DATE ) 
						AND YNYSYDQTY > 0 
  
					DO					 
  
					IF V_COUNT = 0 THEN 
  
						SET V_YNQTY = YNQTY ; 
  
					ELSEIF V_COUNT = 1 THEN 
  
						SET V_YSQTY = YNQTY ; 
  
					ELSEIF V_COUNT = 2 THEN 
  
						SET V_YSYDQTY = YNQTY ; 
  
					END IF ; 
  
					SET V_COUNT = V_COUNT + 1 ; 
  
			END FOR R11 ; 
  
			SET V_HAPBAE = 0 ; 
			SET V_HAPHWAK = 0 ; 
			SET V_HAPCS = 0 ; 
			SET V_HAPCHUL = 0 ; 
			SET V_HAPJEGO = 0 ; 
			SET V_HAPYD = 0 ; 
			SET V_HAPYS = 0 ; 
			SET V_HAPYSYD = 0 ; 
			SET V_HAPYSCH = 0 ; 
			SET V_HAPJAE = 0 ; 
  
			SET V_HAPBAE = V_JGBEJNQTY ; 
			SET V_HAPHWAK = V_JGHWAKQTY ; 
			SET V_HAPCS = V_JGCSQTY - V_CSQTY ; 
			SET V_HAPCHUL = V_JGCHQTY - V_CHMTQTY ; 
			SET V_HAPJEGO = V_HAPCS - V_HAPCHUL ; 
			SET V_HAPYD = V_JGYDQTY - V_YNQTY ; 
			SET V_HAPYS = V_JGYSQTY - V_YSQTY ; 
			SET V_HAPYSYD = V_JGYSYDQTY - V_YSYDQTY ; 
			SET V_HAPYSCH = V_JGYSCHQTY - V_CHYNCHQTY ; 
			SET V_HAPJAE = ( V_HAPYS + V_HAPHWAK ) - ( V_HAPYD + V_HAPCHUL + V_HAPYSYD + V_HAPYSCH ) ; 
  
			IF V_HAPJAE <> 0 THEN 
  
				SET V_ROWNO = V_ROWNO + 1 ; 
  
				SET V_COUNT = 0 ; 
  
				INSERT INTO SESSION . SILO_JGJEGO 
				( 
					ROWNO , 
					HAPBAE , 
					HAPHWAK , 
					HAPCS , 
					HAPCHUL , 
					HAPJEGO , 
					HAPYD , 
					HAPYS , 
					HAPYSYD , 
					HAPYSCH , 
					HAPJAE , 
					VSDESC1 , 
					GKDESC1 , 
					IPIPSTDAT , 
					IHIPHANG 
				) 
				VALUES 
				( 
					V_ROWNO , 
					V_HAPBAE , 
					V_HAPHWAK , 
					V_HAPCS , 
					V_HAPCHUL , 
					V_HAPJEGO , 
					V_HAPYD , 
					V_HAPYS , 
					V_HAPYSYD , 
					V_HAPYSCH , 
					V_HAPJAE , 
					V_VSDESC1 , 
					V_GKDESC1 , 
					V_IPIPSTDAT , 
					V_IHIPHANG 
				) ;				 
  
			END IF ; 
  
		END IF ; 
  
	END FOR R1 ; 
  
	MAIN : BEGIN  -- 실행부      
		IF P_GUBUN = 'S' THEN 
  
			LIST : BEGIN  -- 리스트 
				DECLARE REFCURSOR CURSOR WITH RETURN FOR 
  
					SELECT 
					ROWNO , 
					TRIM(TO_CHAR(HAPBAE, '9,999,990.000')) AS HAPBAE , 
					TRIM(TO_CHAR(HAPHWAK, '9,999,990.000')) AS HAPHWAK , 
					TRIM(TO_CHAR(HAPCS, '9,999,990.000')) AS HAPCS , 
					TRIM(TO_CHAR(HAPCHUL, '9,999,990.000')) AS HAPCHUL , 
					TRIM(TO_CHAR(HAPJEGO, '9,999,990.000')) AS HAPJEGO , 
					TRIM(TO_CHAR(HAPYD, '9,999,990.000')) AS HAPYD , 
					TRIM(TO_CHAR(HAPYS, '9,999,990.000')) AS HAPYS , 
					TRIM(TO_CHAR(HAPYSYD, '9,999,990.000')) AS HAPYSYD , 
					TRIM(TO_CHAR(HAPYSCH, '9,999,990.000')) AS HAPYSCH , 
					TRIM(TO_CHAR(HAPJAE, '9,999,990.000')) AS HAPJAE , 
					VSDESC1 , 
					GKDESC1 , 
					IPIPSTDAT , 
					IHIPHANG 
					FROM SESSION . SILO_JGJEGO
					WHERE ROWNO BETWEEN CAST ( P_STNUM AS VARCHAR ( 100 ) )AND CAST ( P_FNNUM AS VARCHAR ( 100 ) )
					ORDER BY ROWNO ; 
  
				OPEN REFCURSOR ; 
  
			END LIST ; 
  
			PAGING : BEGIN  -- 페이징 
				DECLARE REFCURSOR3 CURSOR WITH RETURN FOR 
  
					SELECT 
					COUNT ( * ) AS TOTALCOUNT 
					FROM SESSION . SILO_JGJEGO ; 
  
				OPEN REFCURSOR3 ; 
  
			END PAGING ; 
  
		ELSE 
  
			PRINT : BEGIN  -- 페이징 
				DECLARE REFCURSOR5 CURSOR WITH RETURN FOR 
  
					SELECT 
					ROWNO , 
					HAPBAE , 
					HAPHWAK , 
					HAPCS , 
					HAPCHUL , 
					HAPJEGO , 
					HAPYD , 
					HAPYS , 
					HAPYSYD , 
					HAPYSCH , 
					HAPJAE , 
					VSDESC1 , 
					GKDESC1 , 
					IPIPSTDAT , 
					IHIPHANG 
					FROM SESSION . SILO_JGJEGO 
					ORDER BY ROWNO ; 
  
				OPEN REFCURSOR5 ; 
  
			END PRINT ; 
  
		END IF ; 
  
	END MAIN ; 
END P1  ; 
  
GRANT ALTER , EXECUTE   
ON SPECIFIC PROCEDURE TYJINFWLIB.SP_TYCSS_CSS1050_LIST 
TO KSGPDM WITH GRANT OPTION ;
